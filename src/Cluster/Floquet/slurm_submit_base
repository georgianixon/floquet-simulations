#!/bin/bash


#SBATCH -J JobOne 		# Job name
#SBATCH -A SCHNEIDER-SL3-CPU    # Project Account   
#SBATCH --output=OUT%A_%a.out   # Writes standard output to this file. %A means slurm job ID and %a means array index, could also use %x
#SBATCH --error=ERR%A_%a.err   	# Writes error messages to this file. %N gives the cpu-e-xxx number
#SBATCH --nodes=1		# number of nodes  
#SBATCH --ntasks=1 		# Sets the number of tasks, CPUs
#SBATCH --time=4:00:00 		# Walltime   
#SBATCH --mail-type=FAIL   	# Could also be NONE,FAIL,ALL,BEGIN,END,REQUEUE,..
#SBATCH -p skylake
                                                                                   
                                                                                                                       
source /home/gmon2/.bashrc
conda activate myenv


numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo "$SLURM_TASKS_PER_NODE" | sed -e  's/^\([0-9][0-9]*\).*$/\1/')


. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel7/default-peta4            # REQUIRED - loads the basic environment


application="python DataGen.py"  

options=""


workdir="$SLURM_SUBMIT_DIR"  # The value of SLURM_SUBMIT_DIR sets workdir to the directory
                             # in which sbatch is run.

export OMP_NUM_THREADS=1

np=$[${numnodes}*${mpi_tasks_per_node}]


export I_MPI_PIN_DOMAIN=omp:compact           # Domains are $OMP_NUM_THREADS cores in size
export I_MPI_PIN_ORDER=scatter                # Adjacent domains have minimal sharing of caches/sockets


CMD="mpirun -ppn $mpi_tasks_per_node -np $np $application $options"

###############################################################
### You should not have to change anything below this line ####
###############################################################

cd $workdir
echo -e "Changed directory to `pwd`.\n"    		# Write that we are in the directory /home/gmon2 in the output file

JOBID=$SLURM_JOB_ID

echo -e "JobID: $JOBID\n======"				# Write JobID in output file
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"

if [ "$SLURM_JOB_NODELIST" ]; then
        #! Create a machine file:
        export NODEFILE=`generate_pbs_nodefile`
        cat $NODEFILE | uniq > machine.file.$JOBID
        echo -e "\nNodes allocated:\n================"
        echo `cat machine.file.$JOBID | sed -e 's/\..*$//g'`
fi

echo -e "\nnumtasks=$numtasks, numnodes=$numnodes, mpi_tasks_per_node=$mpi_tasks_per_node (OMP_NUM_THREADS=$OMP_NUM_THREADS)"

echo -e "\nExecuting command:\n==================\n$CMD\n" 
eval $CMD
