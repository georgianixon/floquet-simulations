(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    207759,       4009]
NotebookOptionsPosition[    205238,       3953]
NotebookOutlinePosition[    205634,       3969]
CellTagsIndexPosition[    205591,       3966]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lattice Simulation", "Title",
 CellChangeTimes->{{3.794121391819744*^9, 
  3.794121422179326*^9}},ExpressionUUID->"b0e97a96-1d66-4bda-946e-\
ca50cbc71a53"],

Cell[CellGroupData[{

Cell["Bloch wave basis, periodic potential", "Section",
 CellChangeTimes->{{3.7941214700354795`*^9, 3.7941214751072407`*^9}, {
  3.794121866306074*^9, 3.7941218782507067`*^9}, {3.794122432576665*^9, 
  3.794122433000371*^9}, {3.79415575228242*^9, 3.79415575804856*^9}, {
  3.7941565317669735`*^9, 
  3.794156536719557*^9}},ExpressionUUID->"9b7eb8ba-1c01-40f6-ac95-\
019a5884ff0b"],

Cell[CellGroupData[{

Cell["Dispersion relation", "Subsubsection",
 CellChangeTimes->{{3.7942166029761567`*^9, 
  3.7942166052148123`*^9}},ExpressionUUID->"61c125ed-775c-4baa-951e-\
5d2dbce40814"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hij", "[", 
     RowBox[{"V0_", ",", "q_", ",", "i_", ",", "j_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "\[Equal]", "j"}], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "i"}], "+", "q"}], ")"}], "2"], "+", 
       RowBox[{"V0", "/", "2"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"i", "-", "j"}], "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "4"]}], "V0"}], ",", "0"}], "]"}]}], "]"}]}], 
   ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Hamiltonian", " ", "matrix", " ", "elements"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lMax", "=", "50"}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "maximum", " ", "absolute", " ", "value", " ", "of", " ", "bloch", " ", 
    "wave", " ", "index"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", 
    RowBox[{"V0_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Hij", "[", 
      RowBox[{"V0", ",", "q", ",", "i", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "lMax"}], ",", "lMax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"-", "lMax"}], ",", "lMax"}], "}"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Hamiltonian", " ", "matrix", " ", "form"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenvals", "[", 
    RowBox[{"V_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{"N", "[", 
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"H", "[", 
       RowBox[{"V", ",", "q"}], "]"}], "]"}], "]"}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Get", " ", "eigenvalues", " ", "of", " ", "matrix", " ", 
    RowBox[{"(", "eigenenergies", ")"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qlist", "=", 
    RowBox[{"Range", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "0.01"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"quasi", "-", 
    RowBox[{"momentum", " ", "list", " ", "from"}], " ", "-", 
    RowBox[{"q0", " ", "to", " ", "q0"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EnergyMx", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"eigenvals", "[", 
        RowBox[{"V0", ",", "#"}], "]"}], "&"}], ",", "qlist"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"list", " ", "of", " ", 
    RowBox[{"lists", ":", " ", 
     RowBox[{
     "energy", " ", "eigenvalues", " ", "for", " ", "each", " ", "quasi", " ",
       "momentum", " ", "value", " ", "q"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nband", "=", "4"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", "to", " ", "nth", " ", "band"}], ",", " ", 
    RowBox[{
    "which", " ", "should", " ", "be", " ", "smaller", " ", "than", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "*", "lmax"}], "+", "1"}], ")"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FigBS2", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"qlist", ",", 
          RowBox[{"EnergyMx", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "iband"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"iband", ",", "1", ",", "nband"}], "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<q\>\"", ",", "\"\<Energy\>\""}], "}"}]}]}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"listplot", " ", "is", " ", "fast"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7941224456496687`*^9, 3.7941225912128973`*^9}, {
  3.794156583554923*^9, 3.7941566105976334`*^9}, {3.794156646851612*^9, 
  3.794156692216016*^9}, {3.794157083121804*^9, 3.794157104846202*^9}, {
  3.7941571402353764`*^9, 3.794157159212901*^9}, {3.794157189273644*^9, 
  3.7941572232414904`*^9}, {3.794157265762824*^9, 3.7941573239861975`*^9}, {
  3.7942082309197617`*^9, 3.794208249980529*^9}, {3.7943081735783772`*^9, 
  3.794308184471266*^9}, {3.7943083734809093`*^9, 3.79430837371583*^9}, {
  3.794308566783388*^9, 3.794308599027336*^9}, {3.7943088136397486`*^9, 
  3.794308814009684*^9}, {3.8070872857691674`*^9, 3.807087318743002*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"b78e8e6b-6c10-4a89-94a2-6f5c53a440eb"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
mPMF4Xxhzh+E88c/51rlpA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVVwlMVGcQ9qhHPahabH1vd1+1tgat2ir1FuZHqzaRWiRebRGUVLSKtyLF
CyuKt6h4F6V1m1ariFfEah1AwCNK8AIFRVhAYHeBrQcFq6Tu/8806Us2m83b
N29mvpnv+/4uoXMDpzVp1KjR1dcf97e6XDhxSr96/xhNJI0qjvJMqsH5xzzy
Vr3+HbQ1/blXUA2Gfhgd3nmNJlrlHZrn06oGa7MGH/Naq4kUY41jbEo1Whb9
GbMvVhNh8qpGr6OTchev14SnDFiN/Td4L/9joybc0bamV2HQD4H+M7ZoYr6P
O2IVJrU+6LFymybec4czqnB6W9fahnhN3Ljuvpw4JcVz3uM9mlgqAzpx49LC
Zf0TNNFdJujE4baek6p/0oRML8+Bvr1fWNv+qgkZbo0D9x8Ma9hxVBPe8nLg
XGfm39EnNeGudlSxHfts+918J0UTstytdhydXevahJrwlQXbcUHzQteRLE04
ZbhKfDehPq5Xtib27XVflVhd7+/rmauJz2XASlw34Mvg4EJN1LrLfV6BXuAa
07pcE1Z3eocqUPNJCNNdmgiUDazAtdf8nm2o14TCowJnDhoJQU11wqMcc50b
Yje31QmPcrxRGtzM6KQTHuU4YtvCyjZddcLjMXYYeC3oq9464fEYTVcTopsM
1gmPx9ht9og5LUbqhEcZpnl2GDA9UBcyvXll2LrvB6WdQ3Qhwxll+IVrUIR3
uC4kHNdLsXHU4rKE73XCoxRfXda6hMTqhEcp2pf7vhWxUyc8SvDl8CWbig/p
hEcJDrg9f1biSZ3wKMFx2TGLTqTphIcNC8v6Tnv7pi7iZII2bFmUUJNRpBMe
Npz0TeW5DJdOeBTjkj6bJrdvbCI8inG8x5aww+1NhEcxRgYlB25830R4FOH+
wJVxZ7xNhEcRtk8fvaLbCBPhUYQfvWr+3YMJJsKjCHOnNt14d4aJ+v8IA7Zt
b9VuqYn6XYjnP4uuW7/ZRP0txLqs6WP8Ek3Uz4cYkFng9D5lov49wK5HQveG
ZJmETMfrATbt5vsy7b5JxMj+FODO8/8kTKoyCZtMPx8L8y+Xdm5spvrzMbFk
ZftOHc1U733sb40aOqS7meq7h6e+bhwY62Omeu7htI6LPerHmmme8rCZl+eL
TWFmmp88TA0I/haWmmlecjHc3jKkTZyZ5uMu5kasSqmxmmke7qLv7ifPS8+Z
hUwv6g762LL8y7PNIleGu41nzIn7/yoxi74S39u4elh6aEOdmfC8hcG97Odb
eFgIv5sY2TV+bIuuFsLrJl7MPDO+doCF8MnBp8ueLLnhbyE8cvDjOVMKYqZa
qP/ZeKD6eWvPCAv1+wY2KrjydP4GC/X3Op7tOSEn/oBFFMmEr6E13/BacNIi
9sj+XcVhp+pSGzItIkAGvIIhP+/Y3fu+RbSU/bmM1/rl3HvmsIhU2Y9M3B35
y8PhDRaxTNafgUbwih5t2xniU1nvJRy47p2Ffl0Mqi8Nw8c0s+b0MaieVPR+
2O/pYT+D8r+I6x4l1J0PMCjfC+i3cFbOs2CD8juHWkHKqGHhBuVzFh9NjPDc
HmmISPn+05g+5HinW6sNUSHfdwIjw+KTXZsNkSzjJ2F11aU3H+4yRJyMdxht
M31WxR4wRLR83ooxraa+YbMaIlX+/wBe6BE6r+gw34/HXacc9shj/DsG9ZlR
va3HDcEKMvvByMzJyf/dB75PzwM/T/Hh//GtwO9PVPkB56f+nwScv0vVB1yf
ev40cP3tVH+A+6PinQPu3yeqv8D9VfEvAvf/N4UPMD7qfWnA+A1U+ALjq/qf
AYw/zQfwfND8AM8PzRfwfNH8Ac8fzSfwfNL8As8vzTfwfNP8A88/7QfwftD+
AO8P7RfwftH+Ae8f7Sfwfqp5vg28v/fUfgPvt5r/O8D731nxAzA/ZCj+AOaP
GYpfgPmljeIfYP5JVvwEzE/jFH8B81ed4jdgfvtR8R8w/w1V/AjMj6qf+cD8
SfwKzK/Ev8D8S/wMzM/E38D8TfwOzO/E/8D8T/oArA+kH8D6QfoCrC+kP8D6
Q/oErE+kX8D6RfoGrG+kf8D6R/oIrI+kn8D6qfTEBqyvCt8SYP1dq/QZWJ8V
3iXA+t1D6Tuwviv8S4H1P1v5A2B/oOahDNg/kL8A9hfkP4D9B/kTYH9C/gXY
v5C/AfY35H+A/Q/5I2B/RP4J2D+RvwL2V+S/gP0X+TNgf0b+Ddi/kb8D9nfk
/4D9H/lDYH9I/hHYPyo87MD+UuFhB/afCg8HsD9VeDiA/avCwwHsbxUeTmD/
q/BwAvtjhYcT2D8rPKqA/bXCowrYf5M/B/bn5N+B/Tv5e2B/T/4f2P/T+QD4
fEDnB+DzA50vgM8XdP4APn/8CxGS8F0=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxVVwlMVGcQ3kIk3opaqxKwvrcn1kA82xSd31tTg7eiEMWqaL3xQItWpd5K
xFtAq3i0aqhIFVSayoD1gIoHRQQRFBYEhEU80GKrUvf/Z5r0JZvN5u2bNzPf
zPd9f5evF46Z6WIwGDI/fJzf6nqGoX5FgYZh3iJhaEl4u4Ra9Ogz2sXQ31sE
RV1+ZQ2qxQz3ZkfW+niLpnnHFvVtWot+VWeenezgLS56bageffEptkoPM/o3
2ESIvJ7ibNcA3+Qym2gnAz7F+vQkn2WZNuGMFnW5BnPadUgpOG0ToX2dEWvQ
ON2tvtUum+jsDOdVg3X24Xe7hdnEzSzn5cDxmb5lAyfbxEoZ0IGd/CfOCOpn
EzaZoAOTAz3Gr9ZsQqaXV40ul6/FJ7jZhAy3oRrn/v3U7XmVVfSQVzW+CIvw
HHbbKpzVDi2pwsHb9zc6f84qZLlRVdgxq9l0v2ir6CcLrsKaY3UbC1dZhUOG
e4IZExds2D/NKmJjnNcT7Ni40eAFQ6ximAz4BJNHZG+Z1tUqXjvLfVWJRy4d
eRfa2iqOO9M7Volbu7bpHffKIsbIBlbiTbSlOAosQuFRibnTKw0BaRbCowLn
xbVYbf/RQnhUoOeD4bGR2yyERwUu8HT5dUKohfAoxwEhaX37T7QQHuUIu6av
G9HXQniUY2lc54oVuoXweIz+/QKuXGtiETK9RY9x/dUpYb2fmYUM5/UYrw/2
mJRxzywkHFllOCb3WOaqS2bCowy/GpxpHnfcTHiU4WYRk+2/zUx4lGJKRGG3
+YvNhEcpFq6MOnpmkpnwKMXdHQNj2/c3Ex52/P5h8/VHrWaxQyZox2721jlj
W5sJDzsemFXb4F1vIjxKsHf725utxSbCowSfPH/7fESGifAowVOGVdeiE02E
RzEunP9DdPMYE+FRjO7bj7qcijARHsX45Z45JxbMMREexfi69rMeU8aaqP+P
cInngKAVfibq90O8n/+29JLJRP19iMvNe/f7tDJRP4swz80y+la9kfpXiD2n
Xq+PtRuFTMdaiEtfJG7Yl2UU62V/HuDypZEN6eeNwi7TL0DfqNw1XkeMVH8B
RpZN7XF6m5HqvY+uOw1BC8OMVF8+Lj4XNCZkmpHqycf+L+2bdo8w0jzl4dV7
LzbX9zHS/OShYWSvhn26keblHja06Zq0qJWR5iMXw9fW7d70j07zkItvNk5I
LKrQhUwv/C5iyEeDlt3VxT0ZLgffDPI4PypdF90lvjkYXOB+aHGCTnj+iT93
TrpedEAn/LLx9fs9ffZu0QmvbGxZd87n4HKd8LmDnTaF9Hw9Uyc87mDa4XD3
E+N06v8t3PVu3aOzA3Xq901MfgVNvHro1N8sbFtYN6pG00WxTPgPjPI6kWtq
q4to2b9MnB/68pObrroYJQNm4KTh/u8r6zTRWPbnOl6rCsxfU66JNNmPq1gQ
/z44Ol8Tq2T9V3CrR3zqFzc00VPW+zsG9w6PmJuqUX3pOLcg5FCvsxrVk4ad
XNvMivtJo/xTccnqb75LOqBRvr9h0+07L4fv1Ci/FOy+NlK83cT5XMAbWUNa
DlijiRXy/Unou6Wu2/jlmqiU7/sFw++0COm3SBOJMn4CunaP/9htjiZ2yHin
0PPWtkZJMzSxVj5/HN8d3NdnZPCH+uT/D2FqTJcLRUF8fw9mHzg8b8Zk/r0e
XzgW/1UeoAlWkGZF3+6YFfDffeD79Dzw8xQf/h//OPD741R+wPmp/ycA5/9M
1Qdcn3o+Cbj+1qo/wP1R8VKA++er+gvcXxU/Fbj/JxU+wPio96UD4/e5whcY
X9X/K8D403wAzwfND/D80HwBzxfNH/D80XwCzyfNL/D80nwDzzfNP/D8034A
7wftD/D+0H4B7xftH/D+0X4C76ea5xzg/c1X+w2832r+7wLv/6eKH4D54Yri
D2D+mK34BZhfmiv+AeafRMVPwPw0TvEXMH/VK34D5reDiv+A+c9P8SMwP6p+
FgDzJ/ErML8S/wLzL/EzMD8TfwPzN/E7ML8T/wPzP+kDsD6QfgDrB+kLsL6Q
/gDrD+kTsD6RfgHrF+kbsL6R/gHrH+kjsD6SfgLrp9ITO7C+KnxLgfV3o9Jn
YH1WeJcC67e30ndgfVf4lwHr/y3lD4D9gZqHx8D+gfwFsL8g/wHsP8ifAPsT
8i/A/oX8DbC/If8D7H/IHwH7I/JPwP6J/BWwvyL/Bey/yJ8B+zPyb8D+jfwd
sL8j/wfs/8gfAvtD8o/A/lHhUQXsLxUeVcD+U+FRDexPFR7VwP5V4VEN7G8V
Hg5g/6vwcAD7Y4WHA9g/KzxqgP21wqMG2H+TPwf25+Tfgf07+Xtgf0/+H9j/
0/kA+HxA5wfg8wOdL4DPF3T+AD5//Au4OvY0
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
T+cD4PMBnR+Azw90vgA+X9D5A/j88S8q9AX6
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Energy\"", TraditionalForm], None}, {
     FormBox["\"q\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0, 20.12768795252538}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.794157226160853*^9, 3.794157324561144*^9, 3.7942081980126085`*^9, {
   3.794208243211048*^9, 3.7942082506338205`*^9}, 3.7942921073261876`*^9, 
   3.794308185842819*^9, 3.7943082569615993`*^9, 3.794308374388343*^9, {
   3.794308569241029*^9, 3.7943085998499017`*^9}, 3.794308814785383*^9, 
   3.8070855937352962`*^9, {3.807087286945371*^9, 3.807087293238654*^9}, 
   3.8070873283207383`*^9, 3.8085473014186916`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"1f71d9c0-47b9-4b10-91fe-d14496bf57a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Band Gaps", "Subsubsection",
 CellChangeTimes->{{3.794216618480215*^9, 
  3.794216642423999*^9}},ExpressionUUID->"9582ee4b-0a7c-4f25-9d53-\
8ec5d76fd802"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BandGapMin", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "jband"}], "]"}], "]"}], "-", 
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"jband", ",", "2", ",", "nband"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"min", " ", "band", " ", "gap", " ", "1"}], "-", "2"}], ",", " ", 
    RowBox[{"1", "-", "3"}], ",", " ", 
    RowBox[{"1", "-", "4"}], ",", " ", 
    RowBox[{
     RowBox[{"...", " ", "till", " ", "1"}], "-", "nband"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BandGapMax", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "jband"}], "]"}], "]"}], "-", 
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"jband", ",", "2", ",", "nband"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"max", " ", "band", " ", "gap"}], " ", ".."}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BandGapMean", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Mean", "[", 
       RowBox[{
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "jband"}], "]"}], "]"}], "-", 
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"jband", ",", "2", ",", "nband"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mean", " ", "band", " ", "gap"}], " ", ".."}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BandGapTb", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"BandGapMin", ",", "BandGapMax", ",", "BandGapMean"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FirstColumn", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<1-\>\"", "<>", 
        RowBox[{"ToString", "[", "j", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "2", ",", "nband"}], "}"}]}], "]"}], ",", 
     "\"\<Band Gap\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataColumns", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"BandGapTb", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Min\>\"", ",", "\"\<Max\>\"", ",", "\"\<Mean\>\""}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BandGapTbLabel", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Prepend", ",", 
     RowBox[{"{", 
      RowBox[{"DataColumns", ",", "FirstColumn"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"BandGapTbLabel", ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "All"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.794208186203263*^9, 3.794208186459175*^9}, {
  3.7942083225538235`*^9, 3.794208352348363*^9}, {3.794216981847129*^9, 
  3.7942169823185987`*^9}, {3.794217021159383*^9, 3.7942170405958805`*^9}, {
  3.7942170753980093`*^9, 3.794217114440637*^9}, {3.7942172981879606`*^9, 
  3.794217326824864*^9}, {3.7942173700941086`*^9, 3.7942173735765047`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"1f621b2d-5762-4db6-a3f6-997d948fcc30"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Band Gap\"\>", "\<\"Min\"\>", "\<\"Max\"\>", "\<\"Mean\"\>"},
    {"\<\"1-2\"\>", "3.7698763817140515`", "5.186189591561796`", 
     "4.382005305071995`"},
    {"\<\"1-3\"\>", "6.686622018420597`", "10.531304238992425`", 
     "8.28569804581753`"},
    {"\<\"1-4\"\>", "10.76099898484705`", "17.641644837588064`", 
     "13.960603465182217`"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7942081903572435`*^9, 3.794208201614975*^9}, 
   3.794208359428808*^9, 3.7942169841005044`*^9, 3.794217044314316*^9, 
   3.7942171155239086`*^9, {3.7942173007225895`*^9, 3.7942173271864223`*^9}, 
   3.7942173747461214`*^9, 3.794292111159069*^9, 3.794308259853218*^9, 
   3.7943083768161955`*^9, 3.807085639835595*^9, 3.80708733686211*^9, 
   3.80854730885579*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"69390f8a-bdfd-4eb7-b118-8cc3f328e929"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tunneling", "Subsubsection",
 CellChangeTimes->{{3.794217961620541*^9, 3.7942179630528884`*^9}, {
  3.794292112905018*^9, 
  3.794292114601698*^9}},ExpressionUUID->"bc429d80-8ac5-4b5d-bf3f-\
ec09d24cd465"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BandMax", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nband"}], "]"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"max", " ", "energy", " ", "for", " ", "each", " ", "band"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BandMin", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{"EnergyMx", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}], "&"}], ",", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "nband"}], "]"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"min", " ", "energy", " ", "for", " ", "each", " ", "band"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BandWidth", " ", "=", " ", 
    RowBox[{"BandMax", "-", "BandMin"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"band", " ", "width", " ", "for", " ", "each", " ", "band"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tunneling", "=", 
    RowBox[{"BandWidth", "/", "4"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "saw", " ", "in", " ", "Dieter", " ", "Jaksch", " ", "PRL", " ", "paper", 
     " ", "1998"}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "valid", " ", "both", " ", "for", " ", "all", 
     " ", "bands", " ", "if", " ", "the", " ", "band", " ", "is", " ", "deep",
      " ", "enough", " ", "such", " ", "as", " ", "5", "Er"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FirstColumn", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<Band\>\"", "<>", 
        RowBox[{"ToString", "[", "j", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "nband"}], "}"}]}], "]"}], ",", 
     "\"\< \>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataColumns", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"Tunneling", ",", "\"\<Tunneling\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BWColumn", " ", "=", " ", 
   RowBox[{"Prepend", "[", 
    RowBox[{"BandWidth", ",", " ", "\"\<Bandwidth\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"FirstColumn", ",", "DataColumns", ",", " ", "BWColumn"}], "}"}],
     "]"}], ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "All"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.794208429799821*^9, 3.794208446669986*^9}, {
   3.794216651180182*^9, 3.794216693856843*^9}, {3.7942168229683743`*^9, 
   3.7942168344504814`*^9}, 3.79421742241295*^9, {3.794217457049296*^9, 
   3.794217484396023*^9}, {3.7942175462446957`*^9, 3.7942176444878683`*^9}, {
   3.7942176864094667`*^9, 3.794217763224947*^9}, 3.794221351442742*^9, {
   3.794308675472567*^9, 3.7943086906108437`*^9}, {3.80708566570749*^9, 
   3.807085692044976*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"f62a291c-c43c-4f09-bd33-45ddfde707b9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\" \"\>", "\<\"Tunneling\"\>", "\<\"Bandwidth\"\>"},
    {"\<\"Band1\"\>", "0.030820095959216642`", "0.12328038383686657`"},
    {"\<\"Band2\"\>", "0.3232582065027194`", "1.2930328260108777`"},
    {"\<\"Band3\"\>", "0.9919906511021734`", "3.9679626044086937`"},
    {"\<\"Band4\"\>", "1.6893413672260364`", "6.757365468904146`"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.794216651656026*^9, 3.7942166622644005`*^9}, 
   3.7942168235874677`*^9, {3.794217462296595*^9, 3.7942175034574084`*^9}, 
   3.7942175786814833`*^9, {3.7942176166661744`*^9, 3.794217646040308*^9}, 
   3.7942176876013536`*^9, {3.7942177306961603`*^9, 3.7942177660081997`*^9}, 
   3.7942921169408665`*^9, 3.794308379112553*^9, 3.8070856427888575`*^9, 
   3.8070856925477066`*^9, 3.8070873463498783`*^9, 3.808547322132263*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"7747e1c9-fc1a-4df7-a715-15a5ca7287bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EV", "[", 
     RowBox[{"V_", ",", "q_", ",", "l_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Sort", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Chop", "[", 
        RowBox[{"N", "[", 
         RowBox[{"Eigensystem", "[", 
          RowBox[{"H", "[", 
           RowBox[{"V", ",", "q"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     " ", "[", 
     RowBox[{"[", 
      RowBox[{"l", ",", "2"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "the", " ", "l", " ", "th", " ", "eigen", " ", "vector", " ", 
    "of", " ", "H"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EVNormed", "[", 
     RowBox[{"V_", ",", "q_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tmp", "=", 
        RowBox[{"EV", "[", 
         RowBox[{"V", ",", "q", ",", "l"}], "]"}]}], "}"}], ",", 
      RowBox[{"(", 
       RowBox[{"tmp", "/", 
        RowBox[{"Norm", "[", "tmp", "]"}]}], ")"}]}], "]"}]}], " ", ";"}], 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Get", " ", "normed", " ", "l", " ", "th", " ", "eigen", " ", "vector", 
    " ", "of", " ", "H"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bloch", "[", 
     RowBox[{"x_", ",", "V_", ",", "q_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[Pi]", "*", "I", " ", 
         RowBox[{"(", 
          RowBox[{"q", "+", 
           RowBox[{"2", "n"}]}], ")"}], " ", "x"}], "]"}], "*", 
       RowBox[{
        RowBox[{"EVNormed", "[", 
         RowBox[{"V", ",", "q", ",", "l"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"n", "+", "lMax", "+", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "lMax"}], ",", "lMax"}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "we", " ", "use", " ", "cutoff", " ", "jMax", " ", "or", 
    " ", "smaller", " ", "one", " ", "instead", "??"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BRe", "[", "x_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", " ", 
      RowBox[{"Bloch", "[", 
       RowBox[{"x", ",", "V0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", " ", 
      RowBox[{"Bloch", "[", 
       RowBox[{"x", ",", "V0", ",", "0", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BIm", "[", "x_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Im", "[", " ", 
      RowBox[{"Bloch", "[", 
       RowBox[{"x", ",", "V0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Im", "[", " ", 
      RowBox[{"Bloch", "[", 
       RowBox[{"x", ",", "V0", ",", "0", ",", "2"}], "]"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BNorm", "[", "x_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", " ", 
      RowBox[{"Bloch", "[", 
       RowBox[{"x", ",", "V0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{"I", " ", 
       RowBox[{"Bloch", "[", 
        RowBox[{"x", ",", "V0", ",", "0", ",", "2"}], "]"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "*", "x"}], "]"}], "2"], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"BNorm", "[", "x", "]"}], "2"], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"BRe", "[", "x", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"BIm", "[", "x", "]"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", "\"\<x/a\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Lattice\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(Bloch\), \(2\)]\)\>\"", ",", 
        "\"\<Re[Bloch]\>\"", ",", "\"\<Im[Bloch]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Gray"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Dashed", ",", 
          RowBox[{"Lighter", "[", "Gray", "]"}]}], "}"}]}], "}"}]}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.794217849866932*^9, 3.7942179068045263`*^9}, {
  3.7942191953641396`*^9, 3.7942192240812416`*^9}, {3.794219863743642*^9, 
  3.7942198759975877`*^9}, {3.7942199913553724`*^9, 3.794219998185133*^9}, {
  3.7942201934139977`*^9, 3.7942202890218425`*^9}, {3.7942215317319183`*^9, 
  3.794221537522242*^9}, {3.7942216837711363`*^9, 3.7942217164066544`*^9}, {
  3.794221925093873*^9, 3.794222050952367*^9}, {3.794308225864393*^9, 
  3.7943082428479924`*^9}, {3.7943083419612904`*^9, 3.794308358175928*^9}, {
  3.79430841765384*^9, 3.794308430936601*^9}, {3.794308460951294*^9, 
  3.794308461648473*^9}, {3.7943085398200235`*^9, 3.7943085610309944`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"608ea58a-f31b-495d-a6c4-ccf368f49dbd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1: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
8PFS4eTiIpNwalb+//+b/R+oGNvV
            "]]}, Annotation[#, "Charting`Private`Tag$7639#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1: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
HheE4Vzj6lU6HePn//+f/P8AfTvdVQ==
            "]]}, Annotation[#, "Charting`Private`Tag$7639#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1: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
Nm/EV1ao6P//3/D/AP7pTnw=
            "]]}, Annotation[#, "Charting`Private`Tag$7639#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            Dashing[{Small, Small}], 
            RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
           LineBox[CompressedData["
1:eJxF0WlI03EYB/C/50QyE2yUF57/TIlFZblKnRqKlmmFm1erTTeXrbmkPNM8
mpVtQ11BZl4vREUJUlI0z9K5MBfhSKSmubTarDxmXmuuAn1+Dzw8fHjePA9f
F2bqeZYxhmER//r/XDvNq4pK5ftjW1WctM/zHX42YNujv2ZSRDgdvNAWLOTi
PHAhUeuQgOeBR4bDZy/gYnBqbfqbSLwaPCAUvozAn4HNzNMI6pQ+cNhthuAF
dRjckcVS1r+XgyfirpLSMsbANqEi9gBlHLxLwWo9Fv9xy5RuN2duk4A5BXtf
5bWRwPJpdM9G/hlF5Rcwp08m6y2cBVckNtjtvvwNfCBmemWTpQZPaiPllLA5
8NLU3oPE6J/g0ubsZBptHoxbW0RkVi6A2/n5zeKaRbDCQ0I4V74Edi8a87xY
oQWTo6aO1FQug5V8gb9I+BvcSo61GipbAROpwxONglVwgAore3VjDf1H5Fjh
mesoz+ord31SNsBV8sdSMV8HzuVJFhzT/oDnGJ57Ypl68AO9xnSSvQnu+hE6
vzPOAP7g4as67o5Rts3Zn0iS1CMPUONzAp2MwIdjNE22dcjcopBxP3tj8D22
xYaRBLnHkWHQ2JqAOzeLTbzEyPK2YI3IxhQ85MyWCsuR73RE101bmoETXD/R
40XIunaSvTfBfNsnb5mo3z7KA2NEdzLDAyOAM3jUZcssZIejSTI8B7lff/1p
UC6ypUh0KrsAubp58KH6PrL0+yEf2RNk20TrdEE3cqeXY3hdLzJ9ycuppx+5
sSBEujyIfKI2l5g0isxUzrUHTSIT6tdL6J+RW7iES9kq5BWdK6H1K3KJXRzN
ZR6ZpEr29ltEVjTdNMRokZ3IZQ2lq8ivsZqclnVkjqwlUqZD3lHa5TajR35O
k60aDMh/AdWBGqE=
            "]]}, 
          Annotation[#, "Charting`Private`Tag$7639#4"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {
          FormBox["\"x/a\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 2.99999993877551}, {-3, 3}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Lattice\"", "\"\\!\\(\\*SuperscriptBox[\\(Bloch\\), \\(2\\)]\\)\"",
          "\"Re[Bloch]\"", "\"Im[Bloch]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6666666666666666`", ",", "0.6666666666666666`", ",", 
                    "0.6666666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TemplateBox[{
     GraphicsBox[{{{{}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0]], 
           LineBox[CompressedData["
1:eJwdW3k8VP/3nswwKqVNSpGEpJIilfDcaE9RoUiUkLTJJ6LsoSJryL4XSihb
SVnLkjWJ7Pturn1ffvf7+2tez+u85r7P8pz3ec59zWzVu3/BgI1GoxnRabT/
fU6duReiet9E4cqBhOLwKmF5Z/3tYuWi56BCG5VWcW5VKGV1GLuJ6mBLXuXe
aacleM9TH/4v2BANG158epG2FkPJSi/viN6DocLDoHinreDb8ffrYo0pms4U
FEZf2wl5C5e9RcHm4HkT2Lk8TQrXChRivK8/hvh/L8PHq2ThsH50s7aoDfRv
ay0uOh7B708Xi7zH7eDAQ3Pg2nUc+nW7HSdrHNB43XL7et0zGF/CCe0MRyjr
7//J6aEK5x1t09nBzvhNe7zCMuUieM9npojYPkdWsQF79ZZLiLXwu+9y3QVB
zgmSPJVa+FVwuvOiqDuSV99+7elwHQmP1qhqMzzRH7roOJh3A49cbT+4j3ti
3jXcR1zMEJzJmkajNd6I/Jv/b4/mbVT8/PlDpOgVqhIvJQ2I3ENAndS2yxk+
GL3x2uyLiwnE2VY2ZQb7wfbj2/xrCf9hhOfJYdLtNeyCV65X0DLD1x09/ltt
/aG3VFLTlPcRlM/nXnS+HoiA07suVPx4jPvh5kUqoqEgttxeOmlhj4Mp7aIO
vGFQWzq3yPRxAE1fTFGLEQ7dtzGCyelPUfTIN+zleDheRwj9Lt3gDK2w+1rD
NZGQ/vnDrPiIKxR2iL5wUY2CxsYrOXoRLyGU3JC+rSgKb9bH7LNd6o7+n6d4
NDKi0RaityrY0hNWrG0VGcFvoUjjj9vu9wrXLOoWLvLEYI1smmzNTR8cZfPa
PegWg5PxEs+/yvtixfoFly22sdihEjjLN+GHUPnaY47X38HX90z+on8gcl6+
/HpWNAFhYQsPf12IwPe+fyXL4xKgP8iScuqJQObJ7U1FOxMRwO5WH2UXiSts
12lRG5IgqHsme+nnKKh/nxXaIvAR21w+Pz+j9BanZfYa8e5IRjS7+i3J4vc4
2VljYm6cjGeaxmX/OcXjhI+NZfX7ZPB/2VhMU/qAoyO/XF5JpGA5EdBM5idA
IcHwA7d0Kvzs2/+NDydBSjR4hIl0nP617tjJ4ynYV604a2iXDt/hlRPfUlMg
6dhL/5mTjlNiUrUnRFMh0SbD43j0M06lGLx9tSwNYqGVB2inv0BuYfuK/uZ0
bF7PtJ5S+4oX67P3uGV+BTuHKbPXOAvpha35Wny56Dllyz0ak4UM0Zon167m
otjtJe98RxYkc9jDSsJzUeBS9er5nmzksbf+qhbLg+saVlRwXDZoNsEzgfL5
WCe0LT8/JAf3zynE3bT8CdEjbgwe5zw09/Ac89v/C6dsrzulahTghZmHx5rS
30i3NGh8U1mGgR9Zm9RFmvBP6/Ye00dVeGtvu0zhUidc2k7cee1chZBSg21v
7nZC1lg4LtO3iuqbqcM0x04EWzYKMVOqcD7vxVuvpE5c81dZHzxUBb63O2ib
l3ahu1pq/setP3jzcgNfdHoXxlXnijdqV4PpZDa7b2kP3tbWMnG7GpskVr/M
5O+BxrXUo/qPq2HMs3qn9L4efL5/73uCfzUCxQ2aB7R6YOXe8lGpuhqOT5UP
2r7vAb0k3//uub94fkS1n3aqF6tPuBnmEDW4cshC98zDPhyNy8TO8zV4w1Zw
MvdZHyyWD2zwvV6D9yd16/iD+tBSfvqXkUMNBqbf7HbI6UPSZU7JVfk1yDRu
EZ3h6oeq8dNpnRO14Pu8v8cqtB+OJZ9+F16qxRvzR4bbk/rxWaLt/T6jWuys
MXRNzumH4Cihw/GiFtYSV9eadPRj6MlC7ofiWqyxsZUyExuAp5vly7mz/7Dr
01vrF+8GkE/GGhjq/IODyK+vhzIGMHW+VqHi3j+kDX8bLCwawLX1B4ajPP7B
/Wyx69OeAUiGjamfqfwHEf5XWgbCg6hIur8lUK0OG7+NJ3/xHQRjbdgU3aAO
q5zUFo5HDeKgWVnlXbM6dKjqNiclDSL80G7HI351sNngWLfx1yBMcvt6emrq
cDU7eE5uYRCr/hh8OnClHhuK9lx7f5UFYvBIn9rtejiKqMh9N2LBhENAyPRJ
PS5yunB++I+FyoN/veKD6ql7UpYh8IIF75DjD7Y21CPTLCP89CcWctOE4hQG
6lH34OFa2UwWRssXWq7M1aNDRusN4ycLamzpqn6bG2DwnvZD/B8LPDe3Sy6/
2gDW8Vvan+dZOG5HNxK72wA+zg8SNhwkzAOaw45ZN6DRV8FQgJvE31+vue1C
GiB6QCVxcAsJf0lOcqyxAWv4hm/8AInCUx2ia1gNOHahYYP2CRJTetk6exYa
sPz6N8+ScyQ0fS3Kbgk0YqfVCVvZqyT4Zno+NOk0wvd4icFJCxKn1/7onL3X
CO2lfArvbUg83hXBv9G2EUuODJ/rdiRRr6PpdjGsEULyUg19niS4LPb/MEls
RFDuS9lPfiTkvFbPu2U1QsblrO+FYBLBeUV3CpsboXV/LadADImShjfRnWQj
/ru1jv1UPIm5cfsGNloTjCMfFip/JHFVTFZZXrAJPfb2Jk0ZJATc3u38dK0J
ep8DF8RKSJx763yj3KQJTqyUjg0VJGyy9IIG7JpQl+d2oLWKRPMw3/LtEU3w
i6MtzNSRWLV8UvHoxyYMX6rWVW4iQQhXPb6e04TWFU3LzFtJhGu49gW1NkHE
9Rj/hW4SFfdvCn0ZbkIZ94wZo4/EkhdKWn+XNOP6YfcZ9wES+yK3eI+ubobh
/JvoYRYJva+zRauEmnGVfurermES3n9qlkjsa8a7grbzGCWRO5h86IxiM16H
KZ4WHycxwuH5wOhCM04XBl0YnCCxTfBOnJNeM4pNnQyfT5F42bQ1wu1BMxae
f6tsnyYxEVzj72vXjOXsWaabZ0noXnHzDPFoRgZ/6/F9c1S9Nyo9fxPajMHK
n2dE5knsrZ2y/fChGUWDOrbjFA70S3iUmtkMGe6O5sgFEnR1/fvffjUjPa7h
9u5FEnfW8t38UdeMuKWbhHwpXF1ZrlPa24xCjW9L6iis4OmkUT3VDCG/3cvm
KKwWwx/Dorfg6vuth2cp/Nx5KtJ0eQsuaQb51FD4m0FV6MSaFggr9qz3ovDI
0YTAx3wt0O2KyN1OYVHhF34LW1vQF/XBP4jy5wpd39thRwu6kuUCByh/PdsU
3Dn2tmC3WEkhH4Xzcza6uBxswfIeYVFRKt7p8DGnlUQLNOKvpKyk8iFhV27v
faIF0zMVZn+ofOnpvrNer9KChK177z6i8vlawckyUKMF8pIPQyapfNPmZR9E
GrSgoms+1YOqj3QDz13Ruy0QP5z4Joaq362vQ0bvHragI2tDYzBJ4rfl22uf
nrbAInjH/i39JJia9toyri0YM/fXje+h+H5Q+3KGdwuKHpzrXN9F4s3EatXc
iBb4jWlvdGwhUVc9cOZ4XAvy7WqrnBtJrEwtOFGc1ALlTa1LblL8tPjPGr+z
WiDxaNOfLIq/8RcuH9YoaMET3mLngxS/W/dKHagro87XXyxyp/h/eqhHoq2x
BSGr9wr9yaf4X54nbtjZgvh9bCfzskkkJ4SK9g20IPgqXdAzk8Tmu2oCI7Mt
iHEzW56XTILVm7WCja8Vc5VObe7hJISKApc6b23Fmz0H390JInEp1ox92Y5W
HPO/ZSZG9XO24c751Qdb8Xrc9KisK4lX7X4DWzVaIb335obC/0gcbLz764h3
K04FCW3zVyCRsMOUxyiwFTsMt+t/lyEhbG6u6x7Zis/NoUnfJKh+5LYdrfvU
CjsN4vsJARK9hOemh1WtmFplz/ZyloXA6E+3365rw+j7A8K9CSysGk5LLdnc
hqrJ5x7vollwlv+6OCLchno3davjgSyY/s17hf1taJrbdWylEwtnOKu/1qq3
waTwrE/LZRbmbk8uX/66DX/E7+nFTQ/C9POs+t6wNjxpi9gtODiIHgYt/FJM
GzKOHFf9r2UQf0I4paPT28DiWimQ+HMQH8o3asvXtkGuLM7GzmsQOlJy8fc3
tkO6/ZF3rOAgcmbslP8EteOMDX/batEB/NloOnE/qh2yL219zNcPoOvgjfDl
79uh63vvbDbHALgeHRtTzGiHivB9XXp3PzRGlwZ/rG0H7emNnjNv+9HX793v
ztOBxNKABxyC/VjXGO1yyqMDn6zVeHct6YNRVmHhd4dOeH0t4jr8tBvTh1YJ
Sbt0YmxPyaTDvW64pFx6EufViQmtmJEMzW68j+va7RPeiUEpleLZPd1gvWK8
uvW9E40/nvf+qO/CQyPi6rqZTkjK2XpHSXbBbvXn4VsPumAr/4pRWNGBgBsx
fDzXuvHl48oN28Zbsfty68SCQS9GHqu+Lb1Qg+A1WHC924tR75iYXSI1WFYa
zL7RrBfHD//aEjb5Fz1HLq+TcuyF2ckqRnbwX0TvLN97M7IXLS9iXOa6q8G3
mHmnvKkXjf/dkUx3+AOOt/5tYZf68Hd5tmXjr0qYXZvo3aXbh5Vei563IirR
wac2/MWwDzcTzijwPKpEjgc37Y9ZH4IejZSVCFXCytKZn9OnD24nz3X8fFKB
EeWHl00q+mCvwhVw16gMTaMqZcSpfvRUfanudSiC+6aabSbn+1FW72HJkiyC
gpKOZZhmP5STNTUvNRcizPuO8MKtfszQEtZryhfi2t4Xj7+69MPv10o1qYWf
aL+XKypT0g/DYt7c8Vf58PE7ZWXwpx/tBb8iQ0/m4+j3ikqfhn5Utu2/83k+
D9Ermq1GB/rB01Dx7citPBjGz/5OWjGAdv+5w9nHKD3cK227U2UAQU8v/eDm
yYb/6sw/WpcGYH3zTahCZBZOHlISd9EdgPm9Uj+NTVmIe36+uuf+AESmOyPN
V32H8fZ7O996DuBF+ZO3wRyZGNSPqRH8PYAy2V0/orZ9xkjzRsn16oOItJZi
k9jxEYI3JqW3XB1EXrT2jbT8JKh0/TkkZjCIzACT6IvXkxA/4KEkazaIoWoD
xYjDiTCcZr+kQ+kuWrj378YT8ahbM2L9tnoQi1H6iSt+vQWnX7lDYuMgUu0D
bvmJvMWBjR+efe4cxPWl7+QNHN7AZ4uRV/H4IHJDXZ3rFaNxbldTNIuHhdr3
HZHqzRHIOVb8S0aDBYHr+k0u3EEYKoypgA4LF9pdLuWtDISAslP1SUMW9o12
GKWuCcDjC0SzljkL8j7L11eIvYa0btqIjR8Loed+nt/q/gp6ba8mn4WyILP8
ip9Rsje8DB7Meb5loW6TUN6TRi+wbu/iiEpjYd2ac5tWEp6Uzo/cWPCXBbPT
w0LSNi74O2srUNHEwl7fpjtDPC/Abnt1278uFjhcsedG+jPoOW3Y3T/BwtJw
qxhLXid4ck7sHVtgQUe2rnPb36fIcq2Smad03NV9oR+8Qh2w2dud4OYlUfnj
cHOesh1O89w5toHScY08agKbDWxg6X/q9NbtJB4dlYo7d9QKf0MZalIHKJ2U
74QoeQswhNouy1E6L6jbSrX8kjmk3mRdPUbpPB4dg9cfnB7C8/3jm5cukRDT
2ZjuvfkBriw5VlKtQ0ISPfeaifsQvcS9V82QRNcZ4sW08R1kskXPqJpR93LU
63OGojfx7PI93XIrEvpfZK/np+vjQsLB/LOU7kslErUDbuuhR7PU7fQrSiec
zD//yEwbyYmvRwoDSWyQ/7JBOP4ybNj1Lp2IJOGuwDfXtl0dp67syvwRR+L4
COn/tec81n2cEDxK6bxsoQuDtxrPopkjxyn3MzXHbqxf+f6/k3in7dpHUHOM
EXFK+biPEh5+UlfJKiCx1Y/t1ksbBYBTMEW+nMTaKiMVo14ZLNPp25D5l0Ra
zLk0yVuS+JOcYi1L6byb0Tevd8+KIGypbdvnThJlfrndo6F8MNY9deLAIIl3
ZzvjE6WXY3/q2vjUMSpf26MntWJHFWjLm1ZJUzpjr/7n5LuFOQqGkn9k/y0Z
AkFWxvU1ZCucuXLorj/7EDqq49YuUx1VkHQODbu0dAhyp7dp8vYvw/qP9N/r
Vwwh4E3cZpPbfJirN2L8XTWEO01s7UV1ImjlKJPxXTeETQPPz42pSeLnXqlb
ahuGEHuw2dimUgbx2v5BazcP4WLX48PjegrwfjZf+nvLEFq9OySiHZXw6JMe
zXvbEApDelz36Z2EdmPBvvPbKburxK5NxWehyLnbYNXOIXB+Ldq9o+k8tkt5
vy6XoOwjiiEGm9XBpTNZ5L5viLoHVjV/DbuMkefac2dlhqB0cftlYSNt1CTn
SKyQHUL2ganbv2SvIXLpy1euR4bQfXxR4GuiPp5LD/84fWwIEmkcA938N3FX
V2Nq6akh0A4dN3FOuIWDqYJXn6tS8RtH8LMduA+BFiePE2pDWCa67O0t3geg
L+/P4bg8hC+/lARso01Rdi1V1EmX8segln/biBlSXPk0j94Ywj6PmzbvPj1C
QJqtK/3mEBIq7pmqOlpCn+v0kP29IbzWuLGnR8saM+lNX2yshzB1WaX8Zp8D
WtqUBuTth+Dquje8b6UjfqyIE5h3pPyTGxjrO0z1543/nj55OQSvoZ4ezcRn
EOXmPGsRNIQnu7n2vpl9ifgh+7fPw4aQGcJTEOXgjn2/Zxf9o4aQbkAo5y71
BHzJT1/eD+FtL2FyL84LlzfVbJj9Sp3XF7z+yzZfSoeomi7PHoLbpgdfnVf6
Qb+p+Nem/CFwPbi/U3rBDw8ivtvIlQwhRaz5r/CAP1y2v+2wbhhC2e28l7xs
IVi1VFDBvWUIqzVk1oauDYVfX8Dr0I4hXCiemyR3hCHqg9vprIEh2No76Jh9
CkemlFkSbZ7ikxRZM740CiwctXrKPwyrsl3f03fE4uHW79Wvtg7DyD0wQKg2
FjNsB/dEiwzjtHGjeN3zODB/7mzL3z0M7d+F18SG30FQee1JDoVhsNk7PFjZ
+AEXLretfaEzjHEXLqtdqz4hzcTuvXvYMLaKWUwrbPsCl69DKZpRw7inKrZD
3PcLdDmufxeOGcaNz5v9ppgZ4Aw+UpmRMAwcGRU/PJQBrQK2ya5vw1AWH+iR
/ZWJBX4nRTQMY+1dnWp+9Wwc+/XiH7lhBP76HuNnHPLxR+QV87z3CBqtf3rV
jJbi1PYNB+/6jeBvWLPbkzNl+C4WYvQicASP9x+6/CiqDHE7Y4pyIkfgoj2Z
Y6pWDpu9X133JY/g4TuVij1XKyAm38697s8IQv5sVogspvSCmtSGGp5RmHn8
fKCW/QfCT6vErgaMwv9EFc1jtg6HVJulw4LG0K1Vdd2lsB2ZPeyDemFj0L8i
88W+uR0K9rveiEaNoexieoDJRDuOfrLkSXg3But98bulhTtwbt26icwvY4B/
ifhZ2w7o1Z5Mr6sZw8vGA0uDpDrheu3TofXrxiF9YTRA5VUXVk7XDv/jHUfK
Qcno2tgueHotxoVsGofrBR/Bi9+74JerzCeybRwuxXtSNvV2IVy4e0Zq3zge
mRjsmpDvRkrPpszzqpS9224+pqMbjSZOCm4vx9ElkmWZJ9wLWnY2f6TnOAwO
2+/IO9QLYe65uTSfcWg9bBd5f64Xxh9Mv7YEU+e/H9otZdGLqV7dg9IfxqHr
5PeOv7gXa27I7qsvHYd58b5IiVt9OKlOiuzgnoD0UGNEi3c/bkeLsyusnYCF
2NgP5+h+uI8adFzgnUD9Tu4l3Gn9qPZqiLTaMoFnOY84f9T2Q6+saEvFngm8
z1ntkLuZ0jknojc+Up2A//QatcbQAXw6pLnih9cEJpP6qh+6DEJ4xCXYx3cC
nNd9+0RfD8L3XeZO/YAJXMkq8MiIGoTFJsHT9AjqvESdTc6Zg1CY73I+kjSB
torXUu8HBvEr+yHte9kEJFyWSaw/wYKc5VsPt98TaKxITPhznoWEvbUCV/9O
QKWmhP8/bRa8Iw/LzzVOQCjdz0jlAQuXHdkeyw5OQDfkgtjTABY6TniOpi2f
hMJI4UJeOwsatFwHZ+5JbKmWajEfYKHg8+hqjbWTGD1YrM45zsK7HZckx/km
8TCL/vEnOwmT5QJ3pcQnMXytXTBRhERbnsocm8Qk0pb+C1TbTeKilb3r772T
KOJL462VJiEz2BH34NAknlwQrrFQIjFf9r4r8eQk2gctYrfokrj3rNHMVnkS
tkXy/yUbkGgBN7uK6iT2u8XnCt+h9ukk022sS5OwKxFIC7Mg4eJ96Nqum5NQ
Mr11b9yD0hmnb5OzxpNYscqs/j9fEnfpITa/7k3C7LKsXjk151Uf0kKMzSfh
JaHoxv+GxHqNgn+xTpR9a8hmHmqOH5eLJgxeTMLn68AFA2r/fCRkH7PVbRKa
Rn7vXlFzvZYlaxboM4mQsiOBLoUkllbzNmj4T2LzhMDWi9R+K/t1THFt8CQ2
7l0RM03N+aBnCateRk2iQG3Ks4Wa8yV3XR+djJnEc3G+LkFqf567aNTEeD+J
uhWvN4Par3UEheKtP03iGNau5WmndAjH4hrZtElwTzv8LKF0QNZAveXEl0k0
f5JQ1KP2d8Evvifu50xiuuiolSilC1TDTBN2/pjEztw7kurU/m/vpMLTUziJ
kxzK/teHSXy6vcsqumQSHo2WiWdGqXqdX9p+rWISirdrHqwdp3TJwa5T/H8m
8Szdo/7zBImjAnlJ/2omEZfO23t4isRDRjivX/0kUtUlXgdPk3jTZ2VzoXkS
Fo8a2upmSPyt0Oxc2T6JAYZZ0cQsCY50GeVfXZMYHPQ5OUTpkgMha5Of9U3C
cM82nYJ5EkZPhzYeZU3iT40qp9UCCf9bpXa0kUlsXR5wbOUiiSKVd92Z45OY
ZM9ZZ0Phmf3PzllOT+KKYO3DXxQW36yfun9+El/KDxhMUFiL7cjmEdoUjsU+
7VygsGsP/9MExhR+Xo0b76BwZtlMrzHnFDLzWnxjKTyQUqO6nWsKfSXvf56i
MH9QSno79xQOu/x9Xkj5c87eSyB87RSW7XjUKExhm5v3nLR5p1A1NPhDh/I/
8eyZgQ2bprCP6FQyp+JrkRK7WC0wBbUX5zVvU/Gv4mPP8BKaQv7ZB5wKVH6O
0NoEz4lOwXVj6UUWlU/Tru/PlolPodj6gILVJInIkiDWz91TiFhWWtxN1aPq
k4X6071TeHRybE6S0nnStvu2zR2cwo839OvaQyQMDLhdPstNwcNYPEiBRcLv
zMDQQ2IKJzdec13oJzHJ+/b74IkpnPGLiODtpnTigoPIuzNT4DeV/W3SQeJy
h+5LQ5Up7JCbK41pJZGRtFGrWWMKTX0KSKwn0ec3kR2kNYXWfwE5trUkNllX
bb+sMwXhpEoxiWoSVqfcxisMplDClZIrXEYCbTSv3IdTmNZSWbD8TsVvOyJQ
YTEFR/veuIYvFN82dcQ3Wk3hd4OxLW8qCUf1gsIpxymUuzXW8rwnUVzoRtvj
S8UfH54kQ/VvsIGtu1wAFW9/2Vptqr/vsj3YfDpkCuet3bm0XlDPl1M7aPBm
Cles2eeaKd2vkchnEpRK2W8+9OXRo+JV5lqI/TKF+JdrDJZcITHdM++a9m0K
76dazv28SD1fqDWm8scU0k+lZtQfJdHqG9PM/DuFRD8lrgPUfXbHSlrl4cQU
5MyVwnKoPUpho2ij/cwULpa+sz5ZzQJ3Gu9tj4UpSOgsFsb9YuETOeP8jmMa
yz6e5JxLZ2FSL+d7y/ppjHkv9LW6s+Bw6pzE2QPTUC3icSjez4JaFzK1Dk/D
g3hwiyHOgsjTvaeNMI2wm173+QRYKMxcZ/j0xDRO2+07X8/OwkrJ+pAvl6Zx
ku1waXLVIALWG60QtZiGxrhld73RID5vVj3DejINLY6dRn+vDKJW6OCLNNtp
XDiQaJJ8bhAb9nCyn3g2jY1B2m480oPwOxE7d9NvGkcOB0hazw/Ax6KnPy5l
Gvg0XzTmMgD3OqPi3cPT2Kdx5cpNr34ktKhyToxNY5V+0zfSrh+lXQePf5+a
Rl3+3ywdk35wjXLmnqPN4GKWm/TwuX64Lo/7cp97Bt19s4P9y/rxXK439uPu
GawxVM3QtOmDQ+itZ/uNZzDm+VxOXK0XilcMB87dm8GniTOX96IX9A03zhuZ
zuDPpRlrQfFeOHppbwp6PIMr2ok56Ys9cHZUSaS5ziA5cGxvRVwPXhjvr/n1
fgbx+4eT/013w1NmyXa9wRn8FTD1a3Ppou5t/5/uJrOoT8oaZNi0w/reqyF+
0zk8ZxS1Hr9bh9O5exubzOZwKXbngTqFOmxYX1EUZjmHgpkbKx6vqkPKN66o
rfZziFc/Wd6S/A99XM7qIp5zkLbZG6M+W4vL7y0ydiVQ3ze+vk/arQbSPVcd
D/fN4RTnTxvLrD9gk5szmRucwyfz7ldXX/1BhUfg1W/DczheE/VE6+Yf3D5Q
I4PpOThFyR4J5/6DSGfVXkXOeWzKreYyvF6FVSJK506LzsP0UaLo7mW/0X9d
bIOm3jw+DqyYu9ZVBq079TtvG85Dt+IJOetehkJzd1gbzyNMK0Fj4EAZ3riO
GUaYzqM859p0hUspdFOzU3sd5rEtTjYhR7oEVZyaFx9HzeP7lx/VCwFF+Jr4
wj2oYx7neA8efZuYD/EMucgPPfPweeBe/VI/H/75ZGrWwDy8NwX+aduYD7N/
6o3tY5R/y/7xtDjlYQ9daNcu9gVszl0hJ30jF1EaGUWZIguYdS9f2iGVDdf5
PkaT4QJI7cOC6vqfcfKBT+E7Y8re//Fa+Fg6GJ3yLx/dW8Df6DVnq5zSYVPi
uXa1+QIK1hizjb1Lg0mQjNBRpwWUprtfOUxLhcYhB7yLWkCEjmBPQs1HrP2w
k/4oZgEHZmRXd5h/RIVg9U+l9wt4eEtHi5v3I1UXsXONnxbA27U1/IxWEuRq
SrVX5S6grkvKq732A4TMNj42b1lAoYJa9gm7WDT35MordSxgIEMxXLopBsHa
d5as6lnAyYoD10UVYsBzNOt5HLkAkdeKawUYb8G51uB1w8ICxCU3rneMjcIP
55VX4tgWcfte8+y39VFwmEkXMOdYxIvuHkPms0jMti57y71yEcE+uwpL70aA
lZSUosi/CFNdJXHf2FC8F9ay4N66iJ1bTI8dexsCI3+6XIPwIgIf3zXaHhuM
VluNPLNdiwhpyX7l8jkQf87NVcYeXkTvUo11nFyv4ZX7xtcMi3DPfafkuNMP
52RUNBWVFuHpcFZIScUXBfyRLfWnF3FCMc3NM+oVMgZOkCu1FiGm6nYrxNYT
Mu7BLoVXF6EsF8Ij4eKBT3uGRRyuL+Lm9VbmXX53xJkGao8bLUKtl9xUp+0K
/6mBovpHi+BuWr2YA2esCzxi4PuE8s8s5qD+CmqfPexHU7FdxNmwcW+j9qd4
ZoMDuc6LuCNxxj0i1h7mDO/oWN9FdDvUte6UfIKRN13QC1jENpOAeZ4Llrh3
4nD9ppBFrLkycrTH8REMXDpWe0Qv4nL76xA1/odo2Xnow8nYRXix906OO5hC
u9TtJFv8IsoCSrndp02gtuqArVnyIhiVThM6UndQ8dGVb0/6InYt6e2zdr4F
5YstqT0Zi2iTaxiLnDVE4Zj0+cjvi0gUXu9U5a2Po34vBq7kLiIj+b+8dcp6
yD7Q9Izn5yK+Sg+6395+DXL/9m0rL1qEYQzv7OdT2pDa3KCpWLmI2AiWzmEu
dSR8kxyf/bNI9ej7G/1V5yGu6+SZWruI00UJ6o1ZZ/GWVrfzfgNV73Bwvb52
EkKREgViLYvos225xe2ihFClp3pt7Yso3xPgFWGhAL7Omvmg7kXoLuX7VsiS
gZ/zrgD1/kWs21L8KNpcEmvE7KW5Scrfv3QpJ0FRuBdVlxeOLEIy/GBOBosP
y26L33aYWMRT989sngXL4cxlyyE3s4iUyiK5g/ZjCksSqiLG5xdxijvn9rhr
vsL37T6hNTQaIVMj5RG0JFPBykLhTgobjbgmobxl+YoRBdminkNeDBrhTfos
8mYuxdTGV8x7HDRi76DjflW7jUgzlq8+zUkjdmtvlZyRFsHDr92R25fRiINi
CduNS/dgH5e3CYOLRjybj3qXdFQGQ9pyCq0raAR7lL+cXoo8Ej50Lf/OTSPs
n68ZauBTwp0Fz3+Bq2mE2haejxc6TkBc5XDMo7U0Yv2jVduey5xFd1jnQzUe
GmF33Wv48/PziB7yUNzLSyM2HxxJsc9Qg94R2VUrN9KIA+Y5Tq8lL0PQu6Ox
j49GzIywZkf6rqCpzf19wWYaEW1zkf9lry6CpQ5ZRgvQiLSZFond6/Wg5dh+
3F6QRpwveKnyTlMff0UOtskK04j75lq9v4/fQkflHSVClEZUDtx4x9x1ByPW
EdHHxGjEja/E9WOH7oP777KbqrtoRPOLrceaOk0h4IBCdQkaQV5KSTONfYhd
Eg93XJGkcPaxdbM25jjp3NhvIE0jlqhuqv9z8zE09q05e1uGRsw+TTPe/NgK
+k3HE0wO0ogYglfqaLgN7GWSTJ7I0YgdMpWnuH3skdHlMO55lEac3T6n/sHb
GYXe6Rp+x2mEVP3tTFr/M/xVGEgPOkkjEt3oDTvPvsCon/rjt8o04hfpJTcr
8RK7TogtflWjEdan/95aLu0F2VHtazkaNCIhssnuGtMbp8K8cn5epvjA82iH
d7M3DCdnnlZq04hNacrhDqE+CIsp5ezWpxGFL+M9NDX8kXCRzXjAkEYUDGBM
TTUAmYsyv4aNaES4VaAHn0ogai+Fu83doRGGGgsaM1rBWMP535o1ZjTCXG7C
plU9HI5GGzbLO9EIDbkPvI68b+C97qy14jMaEfg4Z3pPxhuEZ9s3nXhBI3R2
1G0W132Lbxv6wy+4Uf5eiolgS4rBROE3ESNfGiGesS6P5+47GO24sefVGyq/
BQ+OhuxIgsCyVz1mMTQipORxrLJzEqr6ciMux9EIr/Z616H2JCjEC60T+EAj
vg0tC1gTSc2fPW1TsSk0osFHvSp2RzK+S1/P/Z5HI6RTgg/qGqRhHaGr3tdK
8U0+5qPv828oFvRYWdpOI0yMmLFb2L7DdklWQWIn5c/SXhc7q+/oyxWQNeul
EV1f09py/8tC1rEmAdowjcj/wM6xPi0bxmeu9vDQlhDoC5sszclFjsaVJ0cE
lhAjn55veCxUgJ/ePIXKgksIk12T8rkPClBSVr7ustAS4u+p9/2mOQWoPX40
4Z7oEmLos3zcMr1CDMnsbg2SWELIJzwcm4spggDv4vEJhSVEprVAmtTxEjyu
iVzzXncJEX32/ZPJtgpIXe6LWxexhAhs3759ofwv7jw9XiO/iY2wZOduG1Rv
xZRLZfdmfjYid/a57ZW7rXDy1p6aFWAjbjoWMH86tiI0wnRjhhAbcSvh6Eqv
5FZUZIVekRFnI77/yr8zvaoNUnMTzRKH2Igzc6Ka3cVtmHkY07PlEhvB2FXu
++9QB54bcs4secVG/FopHnFlugsGRfyhS33ZiAw9vvwTq7qhuEtKcfVrNkJH
c9vo1u3dmB2+6iIYxEZEXdFyC1Prxj3rZD5EsRGann43viR0Q91H57BVMmUf
9Mzer9sDodwUq4kqNuKeWIh0aWIvFoWLBReq2Qil1FbBlfm9aHjWnM9ey0ZE
TC09LFPbC7+zy1bwNLARFeWauw7T+rD0n26IVAcb8dX0lMUalT4Mkcu+m4yx
EWYh7gd+dffhG//1xb51dKLnysQTXsYAiNQHs+Xr6USamP+13LUDyFd2mEzZ
QCcenLv//MK2AZQ8iSJtNtOJixe3bxBSHEDDv87mNcJ04g9Pmv1jmwHM+Rpn
y0rRiV/Jx31Ghwdgt/tJ5pb9dGJ9RcPS9sUBMH64fmYcoBMGy7rSU1cMgmss
PqlMlk7IDYspMXYMYvMFMlxPkU5oxeqWKuoM4vDKh/Yu5+nE51gn+V15g/j+
xtH6/kU60eDx6/6R8kEoyvtaqqnTCYcXd7kP1g/i9J20BwKadOKd+YbdRSOD
0Cqeuv7pGp0oV9+/wkKQhcfO1op19+mE00xR0IgZCwv87gpZD+jE68ik8jV2
1L6UGiob/R+dOCVi27vGhQWXjqx99x7RifYhV/NPISwEKrJtY7OlE67HuIPv
5LHwZcGZLu5OJ+iS9yS+cpJwH9766oAnndj65Zvnk9Uk9DoyhY550wnRCsWf
6/hILCseOXLNj04cj+85XylOQttXx84vlE6YVbR4m5wmIfl8mjs6nE7kTl6Q
Gj9PgvHEJ+xjJJ0oaNRaPK9J4sO14u8lb+mE6Qp62aubJBZ2ysyzJdIJMdWL
J2QcSPwWqHy56iOdSOBVUHr8nETM6jubBZLpxLNYWqOvOwnVyYjDh9LphCRr
+N3FQBLCfXK/jn+hE8tXBWaPh5GYaqjRUvtKJyKEVxy4/4ZERO6Kx/ez6MRC
TPmKnkQS5qmxS61zqPh1Oi90p5A4HasU4JJHJ3Y3Xcj9Ru3bI26Wn98U0Im7
UaosMpfEUc3OifpyOtGk1CRtVEVig7Kdc28lVc8/v59uqSExoLBp/WQVnfDe
Kxb9oY6Er/D5/Wtq6YRd4U3pc60kjHkH8rfUUXyU4311rYOEwrJnarsb6MQE
/6fwU90kusjM/0620IkfQZXvwgZIZLRdomu00YngbPMALpKER/WI940OOiH+
7OQm1WES+oVuQg+66ATzvL648SiJg1/FPtn00Im/Ry7maI2T4ErIO/Kyj6rH
2WX1WydJtITrVAYM0IkNx/pMs6ZIpLyavhbDohPK7VmOUjMkXjj7DKUM0YmO
v3lcNrMkdCz32OWO0ImKkkBm2ByJfXeKuSvG6MRvC3VTv3kSHLoGYY0TdIIv
xOS0/gKJuvO0Pf1TdKJ1VbUb5yKJhKNB36dm6ETejxrZpxR+ekDmHMc8ndhS
ckj1D4Uvi1c2rl2k+kNDrPR/vyfaxX/n7tYlDGIyQ+7jNIVpq5jzEnQG8dbM
aq6Uwn/YIl/KsTMIbNdMtKBw7Ljc5tNMBuHuk1Q8TZ1v3VPz/tJSBsETXaJy
nsIX6k0PGyxnEBlaNwhbyl/RshW/TFcwiDM1fqFPqXhmsmO17LgZxJTy+B0d
Kt6yZKU+t9UMImHOIoGbyoeDfEqn11oGwf9TOSKUypdMgXCrLw+D2BZ4xZ2d
ymefqm9DAC+DMPV5a3mUyndoHXttyEYGUbf61c0rVD0u6JtXRWxiEAff9Gmf
purFweoqe8PPICyX1+uspup5d0nhjw9bGQSrYG/Y9j4Sgq4Hcz5uYxAxQ929
5hQf/qyLy0wVYRCPTP9qhlJ8kRNzSf62g0EwpU78NGsiMfRxJiFnJxX/oYO/
RepJRB++/e7HbgbBxQahBIqPXCrKEaV7qefJJ388UUEiuzYzuFKKstPj6Zol
JB7q7fav3s8grGiV3xULSTSYrfRoPMQg9snOBIRlkXgfXGE1eIRBmP/r57OL
p/ggesRiWIlB/MDHPvUYEmuSPv43foxBuHzTs2NEknic5208f4pB7PKRlRrw
o/qpT+3yigsMouM1/Wi3DdXf//24uFqNQYhbfi91tCDxaX6/Co8Gle9D6d6z
D0jwreY9zq/FIHacPrHKTJ9E74F/Urv1GMSs+YXMgBMkgnNO7dmrzyCUi/MW
2Qiq/89kiO83ZBDCe1dwHT9I4rNO0FZ5YwahobihVFOMxHOnq9xnTRlEzoTV
9gwOKn/cZcvOP2QQ2j5WnaPzLAz5K3ComzOIaumm1f97P38pfsu89mMGoVfq
xZ3dxoJoVWvfHQcGMV2as/1BJgs/BA1/vvRmEPO3nI8OGrEg2Fy58Z4Pg1gn
uazUX4e6j0Pk76r4MYgLBXOLwmosSPLxrFsTyCBUl4RmNyuwELw2//rrCAYR
LpNxuHUNCw85hOYjkhgE+yWTuztSB1Ge76b69BODMLPwae6LHYT40+ko/RQG
sUr64nP34EG0LFac3v6ZQSzv/dhr9XQQytO2/vFZVP3KXrCmVAYhPNAolV7G
IPw973Y5tw/A9t2pZ/4VDKI5xW/IonoAdUapdZa/GUSa2b2Fc5RI9Ox8aS/3
l0F4+Q2Hx7yj5l3T4fKcRgbRFTVlstJkAH8qA4xLBhiE4O3jNmXj/XBMV49o
XcZOXKmalOFg9UGy8szzfi52Int70zPF+j7U9x25P76SnRizuUO/UdiHfQIS
8kvXshMrjC7KnY/sQ7Mjxz/JTexEC/f91T1qfZC9kL7Kbic7kZn4c/nO1F4M
DWywE1BmJ57tKSh7cKMH2kINOlfc2Al87n8r+LQTs2l7Nu1kchDFL8Yf1Z1p
hhW9t8TXhoMY0iq5PNRahQUl2eXBdhzEwEhxSc+nKtg7up6KdOAg7ltaadIc
q+DMLvEzwZmDiOiZ8XMXrYIH87+sAncO4qVurrP03d+IXD7/cTqUg5iUDj7O
taQSRWtXv76axUE8qGfPWf2yBMpqetU3cjgIbiWxRecDJSjzSV5rnMdBePZc
+6TR/gu/eTQ8zQs4iDeWlsWccr/QwBv0wqOcg9h/g7e8bLgIQ5tErHKaOQjV
e1+cX98vwHrhQ9dFaEziRH5St/eXXBABTpOcbEyi7D+Jq7Hmubi18rfbAJ1J
THNtWykknYvMKeOMZCaTGAo4c/toUg70SoPXKnIzia9cP5rVPmQjwZz2U0eA
SehOytwgzL+htl9ZW1GQSWQ+YhezmM/EkusBIyJCTILPaFvDC6dMqJ3Zt2VQ
hEnUrtKWhP9XzGzRt3iym0l0GB8aXlH4BceLCsT95ZhERtfVkg0X0mCisC7n
iQKTMA0n1t/sTkVA8rVLugSTmL//qCfUOhUDIdNPRY8yCZPnsgVl8SnwNt3Z
mHKGSTw/JWN4cn0ymjZ5eFRqMQnmyb59+uuTwOlVL5KqzSReIP7aTbNE7OUQ
y/TXYRJtgY2BY1kJcBzK7tHVYxLC48EcLVofIP5j5AjrFpPSM0pXRWLf4dE9
jbFllkzi5tZtfUkRb7BZRr9Q9AmTWFHIatCdikb2/INgRWsm8d5X3/LV+Wgs
c3M7+tieSYxk3ynzWB6F0Pf5Pr0vmERnfLX8itBwKP3324j9JZM4pLeWvmZp
OHpkW+S2ujMJEe69E+cHQ7GveLbjsjeTeC3g6LQ9ORg/e/btLwxkErm6nt9W
WPvjdhKxtCOYSRy98VDKw+o1Vlmca1wMZRKC294EKtv7QYtp7HQgikmseag0
6hTog0GRiOq375lE66G4SFkuL3gPJsTlfmASk3xPGtr3e0ImNdO6KZFJrCy/
M/2lyB12R2tF1qcwiSu8mgkeb1yx7ga3uVMmk1D/mrDVvNEJX8T5T0d8ZxKB
7AJLFJwdoTMiLvAtm0ncr5g+9/PQU8TaH/85lk/VX1XosmiOHc6eUgtcVcAk
suzOpy4Vt8XIKr17u4qYhMaW6WS9biscDrder1/KJAaqbfYsibJAy03XPtty
JqG9PObahQhzOO4J+B5UySSeiDSNaqQ+RNn3FMOqaiaxx/4zn4fAA/znnCtL
1jAJ45pxroDue9hwrmLl8jompc+aOSO/3YZeY3+aYhOTKGfri7cbMADzzbSL
TguT2L3B55ThsRuIv8PUfdzGJD6+eDY6XXQN56V5pPw6mMQEh8ao45g2JmaF
mJ+6qPy/5DB8GX8ZQXmS9aU9TOJykNI8T6YaCFeFxN4+JsGutuPZrm3n0XlB
+Sn7IJOwbdXJS847Axc+rUtbSSZhdGnz+NmhY9jTdnOn/DCTyHl8JvRACYE/
cWaLl0eZhPVoxMf5hIOwfPC06uE4k8heLvBVV3gvBA55xXhOMol+Ie7VasMi
yKOFPYmfpvgXZbQpLXEDjArjVQpnqf5sWU3/OswOLs+MbR3zVD81CrzaMtKp
8PFS4eTiIpNwalb+//+b/R+oGNvV
            "]]}, Annotation[#, "Charting`Private`Tag$7708#1"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1:eJwUmXc81f8Xx69V0qJUSJKipSFRhNeHlIZKEWWWKEVIVuObCMnOSlZWJCOE
rIhUyMome5Nx7Yvr3t/n9xfn8bn3fM77nPM+5/V83B2GFleMWSkUylYOCuX/
f2nnzcPVLCwVjMciVv6K0Jd3Ndq9p1rsIv467zP++50fleN997zE9PEiNPAO
z3cZJG76G9kSdhsTAx+MohZVQf180tNMzBwc0Zb5VkXXIbC3MY/ZZIWrsWta
TgsZQd7eXaIszBYB219yjc6Z4cYvhXi/m4/hOyg1sTnzIZw2Twvqij0D04H6
6GveI9Smq5f5zT6HxZf2YXeV5zBqPeA83+SEyeHklze2OGOWhRO6uc6Qb78U
uO+CG1z39ix8C3OFS1Cje8qQJ7Zczs8QdXCD7kzJwcYZX3ywD7Jwv+kO/017
lCbi/fH717l+dTFv/LKy2q31/i1S7Dao6bL7olWtvPzKRBjsPBySvWd9cVrq
lnCUVCQ4P183mW7yg7Dx+7OC9BjU/Pz5Q7TMHzKXy3VM2ePwtlVy57XcAGhn
hEafF/2AfazrOvLDgmDy0NrtTGoSpjY9OTHh9QZ/tqwmxAQ+IW/vUPAOh2CM
HO9IXV2VCtXLxequN0Nw/lbiZN3Dz7CItC27JBYBumy+w2fVHBzP6BVz2vIO
ku482wY7c0Ex2qOkzR6J9Td/i7g9y0eZXeA7z9lILAa8Dc9uL4T2OwvtyaZo
RIYyRiJ8v0Nhr9grd7UYbPM5WvDetQQin9u+7CyLQYTP7TEWpx/49/PsJs3c
WJzm7rjm7PYLT8d31uSGxaE9NVZ2T91v3LBvZahvise7TK0vV6YqoMz6+sCY
Vzzq9+xONNhchbWbGe7bHT7gVsa4zgPpGkTIN59yvvkR1oEqRwc+1KLI0zPv
glgKrui3+0vNNaFgpKVidUIKHlS8YAhmNyP/zO6Osv2fcMP8Aqvi0xbosN6k
xPClwm68LXnd6r+4WrAksl0oDcMlgpJ3FTtwTlrCZMvez3gseOstx4seSIqF
Ta3EF1gWZ5yRKRvGkQalpdvPv+Ada0OpreIIDjsPs/0s+gKLDx86GDkjONgj
vclZORufM2V46hL/YU/En2OUczkgHlz4UvZ6DIKbV/5H08jDhLhjo3UqFRwr
rFYO3ysk/V/YY24+g6GzDuun4wuRuyMv8XfsDMq9PLcs9xViPHCv01jrDH65
1/m7HfoGft07t61Pz8Jjw3hMWMI3ZO7bQD0vMAdekZ0lJeFFCD22m0/w8zw4
SvaWns0vQg17Zef7vnnMGR+uqGotAu16YXD1JhqaE+Trm7cUw3Vt6PtFWxrC
Ja71jb4uhupqX1G7owsQU/Ri3+T6HcZJjcY3QxaxpdefMyT2OxYbXj1j/bEI
TpeQNdu/f8f+b3bTohOLGCmN591LKcHiuFfwmOISPqkV75J/XALbmN9CV7uX
EDlVuqc4uAQGZYckOlbS4RdQLa7ypQSvLAoK2g/QYd3cdvTyTAnaFLbMydrT
cfzGvLKx+Q/UV8ddPrdiGXtZGWdGPH/g2tlPDrf2LEMglv2CReIPzCVXag6f
XQZ9kOfqo6EfuPzdMEvaYxnfLMSNvQx/wp7PbG3+CgbSeCTvbnD8CV75gq1C
uxiI/ixz/827n3AkXAT6CQac50/bRLX9hA7H9eQIewbOOtx0ydT8BdvAO9qJ
XQwc8Sk6HWX9C7W/uSLjaAwIvtvB6eX3C453O+1XcjNBLeh2N6r6BSsxvrp5
OSZaqxRV1UZ/4cs6fgPXK0x874haK8dVisp8e3/7O0wEMW76bjxdigDOPfqu
Pkw8X1d8mXmrFDUxX09ERTNxT0hk4z/HUvBZHlQTymRCXqEnsPhrKXqXnjLk
m5no+88w9IFUGa5o6Ya4rqYQVV7FunrqZXA4pZz0dgOFyA4XETr7oAxH1Of5
9fgphMfXnkjh5DJ0+38amxGlENaVSoZrfpdh9YWVl8r2Uwj99uidtKEyTE0X
s16UoBBHlg3jqneV4+5K+2cmJyiE4Nrvd/KUyvF3c6AeAxRixbade+NvlEOm
/tJXZWUKQRV/MeL3rBxKHFlpJ85QiBa53sRnYeXQcz1wpfc8hShWPXn/Xm45
frDdzzlxiUIk6cYc1Gwuh6iPNcepKxQiyIyNqjhXjjsbXLWYGhTi+dNbaQd4
f8M3clv9PS0Kcc/zuxX/kd+IfT8c/fI6hdAI23mUQ+037OaKx6/qUAiFpBez
1Pu/oVIU29+gSyF25/dmtXn8xpRBbPZKfQrBXXHSvjThNxbWDIf+I+3FvzEy
Gb9+o+xJzE9HAwrR949t6V3/b/hd5XhYTtpVS7fyPdgqYBx6vOMHaWevLvnP
bkcFHo1rnrEm7eitu3ALFXhTeGOmgfTnud+ZckmvAi63j+75p0chbE70Fck+
qcAtERfxDDIe/fPKL8TeViCPrVZVgoz3jE6s8oYvFbhRpNtkSJ7niCn7CkZ9
BerthbedJc8r+MTo1zA5F0V1Sh/0kflY4VHi1sBdif0qcfulyHxRQ3adKzpY
Cd4rCTH/z2frR+fVyaqVGFPQkKKR+f6e21cRfK8SZwY+K5iS9UgqV/Z2dqtE
tvdV4UCyXkGtsZcs4yrBfkxe3pYg87toVKvSU4mXTziKDI6R+eX64S9JqUKq
/+CCyREKIS8genW7UBVquxk8+w+Q+ZTtb5q7XoW7z3nC/+4g83n21NseuyoE
f5KZKd9K5vP6e+2qwCqs+NU2Zb2JQnx5ZNz+/k8VjJptfy6upBBxCqZNAlNV
0LV4FSRDIeNhe/DHZ0M1VjjKSF2hMmHr9fTHI/VqjG1+FCpTxYR0lH/yhYZq
2HY0ptc6MSF2+2188Ww1ohLvGjw3Z8IjsLpm6+oa/A3NPhJynYkn2g3lvvtr
sEfeZgXfQSZ0+roKHpvVYLUjn55xDQO1P3tPZD6twaE/xwTCvzBwLmEge8Kz
BmzHeFpVIxiQNR9NN0qugdkTlzcC9xgQoM3HXRyvQW+NzvHQpWW0rl7vI2L5
B7slqYJhK5dxZZxnjd7zP1j0+eTKO0hHeQ3vqze+fxCiIcq7/ScduYECL9ak
/cHdsOcPJp3oCNkuZjc3+QeJ2sHmefNL0JaUNyh/WAuDaxX77lUvokXb9JCV
XR24t64NeH6SBvceFbM3rnWQUA/f8t9WGmTv7UrID6yD9U41v3PT8wh71C6y
MqMOU3dd1+lHz+NG8KXNYdQ6PDUxvu7NmMNgg+Tyj7v1CPW47HgudRazavRy
ft0GROrKbn/HOo245uaVMG3AMSP1l/pNU9C8kals9LgBW99uecGfNIVsC/OC
lOAGqGqu3/ry6hSeenelnWxowE1PrljDD5NgqygJvn+xES4H8nbtvEQFj4rX
7SKiCSMrwm4fvfwPygn52H+5CW+L9H5snB+B/epRvsCbTYhWDrI5ET6Crupz
v02cmlDxr97u/sgwUq9xHuYuacLm20L6EW5DULv3YkFfpRl5mw9kSzT2w7ki
vbZUqxnq157fSHTsR/bBnsQjJs3Qop2XeH2gH8LThP6KV80wi6kwTnDtA/UJ
ozi5vBls3D8fnFToha/XI0/6hRbYPtuUVlLShZKJD8a39VvQ/B9156BdF2iX
mxVqzFtQLMFyw39/F25sPjYZ49MC42iNwO17O3H43czV839a0BWn6uXe2oaa
VIvtIRqtyOA2lB+3aQb7xnc0NuNWcKSsX9c13oTjNlV/7tu04uqFw6s23W1C
pMwBZ8WgVoSm3B24crOR1AEjQ0NNrXh2LrTc6GY9uOuN04/p/EUqwX1mJqoG
xJjiiIbpX3Ctp5udP1IDyxVCIlZP/uKvSd79pZfV+HO88XVS6F90fEq2m2us
hF/46Qc72v5iepX9Y/6gchRniSQojP6FYyOmOyvKMF3N6NKh/0VTdefKRyvK
oMH6RS1IsA3y+95OH3L6hU13dh9erdeGwZmczpVhJTj9nM1kz/021Gn5ZuQO
f4ft2853p/5rw75v202uyX5H4+8365+HtyHgo8Qdg74iBB/mnJhpb0Ngq/ev
8i8FKD3bJ7ZhvA3TJZKWVk5fQTP8pn+I0Qa9k5ElfOr5uB5oX3VXqB17hy2K
H67IhcDiUHKHfjtceY0PtWdm4tzGH/1L5u34dYZPcDY1A4/Fo7bxO7SD5a/G
ywPpn/FX/7qX+rt2rO0QKVz3Kw1r7KV+WH5qx6kR1/yC1lTIveZZ9ipsh53f
/NETw58Q9r3MrLSzneSLV7YjNkmoaHsf2z/Rjo7HbIVDVR9Bn3VsY6V04DX3
7EX9ownQ2yOrKi/cgaDO1+E/d8VByOvj/vQbHbgvXvB4V1gkLsa53qq27IDC
ka1VY+kReFZoGDr6vAM7HrJ71J8OQ+ekwOrdUR0Av7qIe+4bcK+eV1JO68Aa
WY3Td0MCQeyqe3yziNShquU9H/39EanpMRLa3YGjRULcfbE+qLG4I5Iz2QFW
U8WaVYc9wfLqpHYjSyc4b/zr3DvuhiPR2/2meTqx3sXox6VOFxjmLZVxi3Ti
znaFi65sL+BX38Ry8EgnOCRpPk3az1E89lnmvFInHr4+/udt+RNMrfB9YHKl
E5GbQxntp+ywU9gswcWwE2fMwl557H4Iz44dUV4POtHI290+cM0Cc2FNwYHP
O1Ea9NtNcNNdGOh4+Yb7dMKKh3Lo94tbKOU/6fY+ohN8Aqd8V57Tg0QzzSE5
uROdC2lXPk5qICQoxS4zvxMlX9T4Di+fB9tVI4uvvzuhPztR/LubgNlGgTs/
WjvBHjbX4icigYY/1fqVw5148dqdukGfDwq+LpoNtE6ES+J70+U+BY34bfHj
bF0oM7PLPWg/pODmSou2Wt2F2F9xCw9G+fHVuC5ibkMXRKY32HuXSmBKOSXk
sUAXDtWHvli8qgixXa+CGDu6wM926a63nyp02Iz8nPZ2kfpa/AZV9Sp8exS8
V0h0Qdhv3qw3Uw8lRfzu7se7wLxTfIOt+BYWImdc1hFdiIq/S0To3MXB59WO
fipdeL79rnJavAUMDT7+t/lSF5zSdoXxqj/EGwWXRyGaXdiu6HvTfr8dKMuy
D6KNyed7Hym8HHTA0bZN98Xud0HD9XyVh7ET7uZRTT5ad6FRhmNvJZsLah/F
3Uh/0YX5o2wZIT/csfK6o660Rxe8ZrklNg17Qe647rVcvy6cuXk8xyrMF+/n
eNSKo7rgEL1xJOVgAFobRs+fTuhCYQ7b+DxfENZl/lIpTyXj7+fNu8ofDPuH
/6G2sAs50nJu0rphSLpy7YTmry64yN0kkiIi0C0heay1qgsJ2p583k8icY46
dLCnvQsftVleDsxE41n19323+7vQb9cnxVSMxeeUCLGR0S6wSShacYS8h+B9
DaGpJXKucj28X3bvA8aHC9eyCnTDov3wvk/eKRApC1nluqMbwuzjjtr8qdD6
YMPBtbcbcafP7CyipuLb7f3LPMe7oSSV7pnyKR3+vUGjOzS7kc04Pph9PwvH
2+//VvTrxqbvbyu/DRYgZa/VJpOQbtDuJ/2s2/gNu2xtDbyju1GtmzJUm/UN
3OsdplvTSdvqvdAIRzGGCd+t1nXdiGA3en+4tAQhsemmcbw9eNayvd6ztRzc
k1mZFYI9CGhrGOondaWrfB5zalcPXuooygg8rYBV43d/SPVgofCY6Iq9VTjP
2ZDXfLUHRkk2JxRra0A3nV+9+k0PLOpaOE771MMqe+mqxLseKL6NzO5e04Ah
dkqkVnwPtB2OCpR7NKA+nPNo7Jce+BnE3LTzakRyNb+ufHMPBNxP8jHfNUNf
Ui7Jgr8Xh5K/yz1mtqFo8blqfWgvOn7aJtSd7UU9v9WcRUwv/GoOFmkG9mLg
+K3I1Ym9CI9UbiG6e7HG7tSMUm4vjg79HT/5uA+a06vC0pp7cTqUmGhJ7cfI
P79/3pv68MHaXKL54BB422Pdz/r0wZxd+VjRzTGYFJaWFjj1I8vt8MMAvhks
yHCLHHXvR7Duke4BpRm4Z2g9SXhN2qy+WfvuzyAxYeBAQGQ/6nyexjoWzWDc
n93/bkE/pJ/ee3327iysTQg93sV+ZFpGsohmzOE5T/bk3QcDKKiw+tVzYAE8
nsxznfYD0ObZNt6jvoDoFSqxGs8HcKK1w/HjowV8X2rQhM8A4kViH7mXLGDF
wHQeb/IAzLJHr9/RWoRn7iHXwqEBHEwNXWVouYRtUnadR6kDSCs48POo3xJS
PhUc/zg/ADuV9jU5n5dQHXvhX8CKQTR3OJbWzC5hg4+p2r1dg2jf/2TtFls6
3t6KF9h0YxBnV9RfrDVehtl5vmJxk0HIvRJVdnBehoLkq7vKloNY+1cuLCt6
GT2sptkPnw/iv4Lhjq/tyxCPPqhZG0nahNp2losMMF69Wx7+MAjN8XnPOhMG
ah5wv2dJG8RqrXU2O18wYKM4NX24aBAJv4/bSWUxUNCV+dqnexB/yzWuzG9i
wrdUTCZ+eBB+O8S93MWZMEx901UwOYiU4x4iPkpMrHz+6NA4yxBOrtgaOGBG
8uqdkUYOriFkpVGDpR2ZSLqk82zbhiHEjNcpTwUwobZdvlJVZAhrx4c3xOcy
IbIyxdpo3xCq2PscwiuYmB0XEnx6ZAj+bln7FtuZCCmgmCYqDUGi7glHN4MJ
s7gHG76fG8Ipr7UaR0n9r+Ddk9N6ZQiGzI1fPqyjEL16JZxct4ZgvdazOFKQ
QmSdkkrdYToEz6Ldsjt3Ugi3A3FaMg/JzxuMdqvvpRDam7Yw1Z4MoWM0e8+R
QxRCfPllnMmLIax59+D516MUgtFHu/DcYwiXP67Tn5WhEH8q7s6+8R9CBnui
TIsChbANO6/8K2YIjibqf6NVSB5zzv/XkTiEkq2/ol6S/CRgdsB/7vMQNj4T
u7OZ5KtR9QjZdflDaDLalHGR5K/CE+t7REuG8M8hjffwVQrht/P5K/mKIXx6
HcmXS/Kb0erJw1fryfi9hNRHSb6Tnr7ZbNY2hG2hq3V+kvzH+bfWwbmPjIe+
UK5C8mJr8cndYaND8Gg6oWhJ8mTSx4yqzzND4GujGoDkzWd+ora/6UMQr9xY
mUHalx8HbetlH8Zs78sjNaS9y3Dlj8U1w0hbL6bwmrTnztqbbdg0DPX15VHz
pL9SieGN+7YNw+mWwUY20g7h185TFB2Gz5Zx1c8kn5qx/Da8fmAYyQbxazjJ
+DB8guuB1DCquKZ4Wcj4N/xJSnOTH0b/T1vxCE2S77K3XY88NYxHUuJCnepk
vSK9KdkXhmFTbZjzXY2slxszvvoqaQfV/Dl/gayXpeWlQb1htL4Og91ZCnHg
Wvccw3gYepvvdZ46RSHCNoDhcX8YbGrpzpyKFIKrMoyD32YYm+QrxR/LUYgh
xWu8ks7DOEXZpXiP5FEteubWbx7DSFTkChgSpxA/szbuvOA/DOHzYl827aYQ
sfurJe5EDyPgdqXhUwEKsXFAXGYmYRiqsq3jmRsphFOkO+GYNgw/hQNXItZQ
CINNpy+FfhvGszMuYfOLTAgw882qO8j3aYraNWUx8SpHwFp3YBgv2GrXycUy
QXto/2R4bBgfWbubmL5MNAxJurMtD6Nnm+jlOBPy/tV+jD+2dYTcB5mtj7iZ
YHpyfioRGYGmWHNRD40Bc5XbWZf3jeBN0XXVlC4Gzufv+GEqM4LWirEQixQG
VsQF97zTGkHUv/2rk5XI+35jbljcYATcLteK5cQY6BPQmMy5PYKzbp6eR1cx
UOSznlJvMwJBnXWJBpXLePrIdRtnwAisHqWv+XpxGVOq1tcsa0bwL7Gn3Faa
jpsraw2Wm0Zg2LlubImbjpqiQ3fcO0fAV/Np3eLIEpKl/9nEjo+AM+5zzO3w
JZgIG/o3r/kHHgFz3j30RXRMX6oizv5D38zUg/DoBXhvbdppSXLeul+W218/
WIDCSf1H767/QwDXqqdsxALe+ZntYtz9h79HOB/d/0vDDYlXj/Pc/6Gtbnj7
2zU09JoXi0lX/MPTXv9SJ+05DA0fddh/aRQ/cvdfZ3yZQjBPfr221ihWzN3t
GngyhTMyJ/e5G4xi4t1b7g+YQoLb5YYhi1Gc4bJ6VPRzEvd2m++P8x1FpvKK
+qQ6KsaM4puEa0cRH/5WMalxDFOd/Ic3Xx3Dfm7ZOXaNAQjfmj+6XW8M27+4
Qbm7H5cG6mX2GI/BVeFUHpdFP5JGfU7K2oxB76nFBRXPPtxe4NDSDxzDn8r4
JsmqHrRumPovrmEMez1VO1pGOsAZVO30qX0MPJ8sqfKCHTjGn/wyu38MXcOu
mo8vtSNgu8nr8tkxUMKqNiXl/cVF8Y7Y8U3jKBR1KpdPakbRqfLf0prj2BLk
K8ZLqwW1NL4G+uN4WdbnZqxaCyFVl4Yzt8dxemSXr1LMHzy+QnRq245DLlmR
8etaDY4aZE09CxpH966H9mKlv2HY4z//MmIcXDe3EImh5Xht/IDuGzcOtWMH
VLutyzBuKr4iJmscjMZdUh+O/8IH+2j+X43jeBtr4uywkuS7JQehmo5xeKxS
GDHnKgaHg97OloFxbH6hkB6wsQiGLnwH/s2NoziB5e6zBwXw5ZyTmGGMI0DI
tqKIZP9Cjzrp5RUTkHqVWNk/ngtBP29i/ZYJePF/Ej0R+QXnNpmd4ts+gdNH
L5+JXJOFR8Fnz+3YPYGL+tphF1wz0BjBriF5bAIfuJcyOqPSwC7Sc00OE3j1
5WjP5MlUSL4v1DulMoFAQ7FtFweT4Zv4+I6W1gSsPYY0g2kfoMNyqqJBn/Rf
fODD+z9xENNaL6FxewJv3cZeUotjkc8au6hmMwH/L5eNU8Yj8fKauUH10wms
nSYKEq9E4ErK8ZILzhOQz9XNVlkIwdD1Sq9z/hN4YErr3/o3AJ8/vZkqDZlA
EZcIz4fNfnjGYailEj2B9E9V165w+uCsjnj+j4QJ3FT32+Ki4g7etDlh5bQJ
sEc8+bj3nws6VxS5FGdPwDtvgv5k2hEfdT1GiG8TyGo3329c9BTW6VcvFf6a
QHSdj9iysS3AKZwhX03aVnVqWxoswaU/wpffOIERd5oRRcgE9Z8z/pPtIP1H
evZM7b6Bd6scerL7JxAf8/nQoK867hmcVTk2NgGee7afTZgnIZW5MSlzZgLc
9Zt7XAfEQVndwX2UPgHHyiKhXaKLCrcP18u2sFCR8KPerKecpnBeR+Z+MAcV
DVUlfqlG4jjsGvFOaxUVmTWdWpfLTmJzGlvt5rVUvDq+bsMaU3XQ/5qwN3JT
sfaqWGTE+hvoXlElHchLxY9bYV9PU0zwU0LyrgYfFQNs3G/cvlsiSTc4dKMg
FceMRO2/XraF38vlytrtVLzjK4mw+fgUdumGFL+dVHzfJ9yfNOAI3fZfRy7v
psK7FJNs7S5Q4jxgzL2fCmKdhsOq4+7YLen3pvogFY2PTmc5zntjjf58mfcR
KiQvSaUErvXDlJsu/YI0FQ+j58cM/gSg6XPRwbWyVLScbYxZ+PkG0as8/T0U
qXjQOK46dzoCbkcnf5w7RQXt5R3O50ORuG+gSVt1looKGd5HG39G43imsJ6b
GhUHH+SYPSuPg1CXi4+KBhXlfz73CU1+ANvqf0UrrlFR+npfS+ehRFTdyBRz
MaDi39nMFSqzn5DhIXBd+RYVR6RDGA3yaXib5eDBdoeKM67Zdk2e6TBac47q
aE6Fr86MEvNCJha/dOQ8+4+K80dLN//SzkNXz8lReUcq1Fx2Fmgv5uPH2gSh
ZWcqdFZP3Nz2nryftx6+eOJJxaO3Y4dH1hZBbD3nBftQKu7ICd3L/FGCJKpj
nNs7Mr+zFS5mjT9wpHaJGRxDxSFXdV2lsZ9A4ER6TiIVrdIOoewHynBtaxPf
Uh4VmmW8MkNTlXDfHdf3XxsVwzxPjoadrAf3KmEF7y4qwo6p73Gg1SNo5O2b
iD4qCndILNV+akBMste5wlEqWC/z3ogUbUK+pE0qZZmM9/GzUV/xVoxD+emL
bZPI2Z/sk3KxC9Y7Chr8d0zC+YutzkBOFxZZjx+KFZ2EqbOO9JxoN1b+3N9T
cmASm6tOXXWm9EBYdeOZFQqTWJsZ1BlT0Isr13o2vtKfxENqetau64PIsnye
6P1uEkd8bz3raRqHex4143rMJAonmfu3np2AwYqbBbviJ8HvdkLwau4EOMMU
/+SmTCJPRO+pzkUqtH+xzg98nYS0mYjThcOTYGxzUULbJFQ+3nomSJ3Cqd+v
Wib4ptD5dU+T1YU5CGxe7MkVnIL+gbG/mx3nMH7j3qiL8BSmLyzM3yN5J2ju
HHPrnimgN+SjgMA8hnasET1zbApnv+4o1emeh6e9t2Xk1Sn47owpDNZbwI3v
jEem16ewPyKm+KTHAqTWWbyQ1pvCFnGhj8+yF9ARcymowmgKsb3d68J5FnG4
mjuf9nAKNfUMcdWCRdSL+q+87DeFS4cY39ZQ6Di7m+/4/aAp1AeGu2zaS0fB
nnCTVyFTaKr57+J/l+lI2B9fVhQ9hTGx0ya3Iul4JpHnceTzFFiWBrz1pZcx
fYTIv0ju7diLbxcltZdhcvTH6L28KazpeOGi+98y1I9VX4j5PgVdQ532qKJl
7JHvXc9bP4Xy0q5LbYoMhCuYEIebp/CfY5jw3hsMbCDGLFXbpuCmmEH59h8D
y0rzf5z7puBKS1UoJfnHSvkpa9TQFIyJrK5jtQwMnWKR/Do6hR3jqgLjowzU
nlkdMDszha5vZ6/tF2ZC5ZxvCc/CFBYLvi6mHmci//ym2QPLU9gsU2n5WI2J
+IvbNW9zTIPts4p3439MPNWQ5GvaNI0k+Xuz76uZmLyafWaafxp7rK9ckOth
4raW/KP1QtOozupg3TjDxGVtlVYVsWnEm39W/cZF6lOdCi6jfdNo5djo47GB
QsjpXT7x/CBpv5+LmeOnEGI3dMKypaehrvNOJInUr6E3uyrqZachuGv25dz/
f2+5ZbxMVZhGQExbVpckhXA1Gjmw9uQ05K415dwj+WbJ2EJ/r8o0Trbdiwwg
+cbyzoz3qfPTOLd2s4P+SQoxYPKo8OalaQxMnLIoJXlH5x5j4j/1aRSqnfOp
JXmnxvSFcIjWNIZ3nWP9j+SdU/c5L2fpTONM4jHqL5J3cs29HGsNpvFGrcTl
M8k7hy03pI/fmsaglsYMrlGI9w/e9HCZTOPs2akH97VJfnoouHG32TQ09yjJ
yJF84WsddfKk5TQsrK1fJZG8w2ErZm1gPQ3FmeNxBSSPPLZLjH1iPw3fi2lN
ViS/TNgfbnjzdBplD27dKyNto8eZHBnPyfNW7P9UTNqtT2Sla5ynkap5aEmf
tC/9V3h71G0aWx9WxkeQ/kqeKb/h9JrG0ajXG5zI98k+L/u16/U03LlEw1eR
8XxyvEgjAqfBO4RkKTLeXS/q9ui9nUZ4cUjSCvI819LZJG6HT+NQdVjiK/K8
nt2SMhZR05iROJydSebjG7eRov37aSxNXlL0IPM1i4CzjgnTeHvBLodLlULs
syi57J48jf+y/IOOnqEQ+hEz1/3TpvEuc+7yKmWyH+ga997nTGO63OZ6piyF
WNzvYpXydRo7ZRI+eElRiEM6mY+/FE2DIirVtuEwhQjO2eRRVkb213YRfrFd
FKJi6JR/beU0LDufKmRuoxAUPtvQv3+msfrEiufTmynEXdvGxLGWaXgx0z85
cFKIiPcrMubap9Fh31FTRaEQtfXS+cxusn/lNIciJpmQlXxTwTMyjZ+jfq+q
yf5eQ9Uak1qcxrwc/d5aFyaI7W6zCoxpxOmANmjJhPXF7GUV1hnUfIvlO6zL
RHsS3zptrhlwGoqmr5NgIuVuy8FnAjMY6JTyOFDPQE/wqmMvhWZQu0+rISyP
gS2lMvAVmUH6U+frLtEMPBcLuRS9bwbloU17S80ZuNyrbflTdgapb6Q1CBYG
ZnTb0tbpzOCZaZSPwXpyXniuyd1iMAOOVmrM9gk6dPPkioVvzcDX8tM7qyo6
fvCH1x4xnYHpOMvKZg86ghr1pjWfzOAhXwe9moUOGbXOo+9CZ5C8tyd7+u8i
8oc4xgzfzeDw7ohApexFKDiKvxeLmYG7d7/SuYBFKKc/2pTycQaDPnvTX51f
xEVe3rn8nBmssjbUoWYtwLD5zJfWphmc2iK4PdiJBo8b6TKbeWcRffpg7Ib5
WbRbuih4ec6iptvmsha5Vynfvm2L9p3Fbjrt4KglFbvW0+lZAbOwKXl3zkeJ
invJVnldYbOo9RH1X10xAdqwwfGjybNYCjA/nqEzjg23ZI/8rZxF2imzIh/n
fzhzdUJ07/o5CHLvOPtx7QBMY/dxKGycw8LuLW8v5/TDe9q478qWObzadjbQ
0LgfDa/bop9unwN/6dHQsoI+GFaVba85NAfjPvOfPba9+E8llt9ObQ4viVHR
/uUupMtcX/vj9RwurtGe3DXQjF1T7mEBgXO4UHRpVfadZgR+zN9v9HYO+/gs
qwxGmmC/VfgcW9Qcai5+a5idaoTC8oCrYuocmJePadvwNOD3N2tKQRW59/gH
pWxc/kDuUZyPV+0cFKK7KIr8f5Ai0Syk1zgHxiuWdqTUwC/6hDy9fQ6HlAW+
536pxjVn1seyY3OQ73V1c/OoQJ+K73TW6nmoH6rtF078CU1KsZPr+nncyi+T
cF/8gV/Z0zyaG+chdCjljJvqD3zcq3V4ltyrW+PU81Vp32G5Wui+5L55st9O
q8lYFKHn+yU668F5CKxI7vKo+wb1p44etRLzsDunX+4i+w3SY30JD2Tm8eZc
zjaqcAGWqxIHPp2Zx++cl8e35eTA/GW7jYPqPPqiqjckJGWjC+s5LqnNYylb
rjf6/ReUpFrtHNeaxw0RM4Px+Ey4+8ncEL8zDzdWhQbF8TTQz5lOLN2bh71O
zerQtWm4zxb+7Lf5PBq/Sy49OZIKNWtK+D3beVSpvE34xp+MzZq/Wj64zEP5
X+3lJc54nJaLJYxfzaPmWe7BL/HvYSfiGL/Dax5dT8KrT1yORfO4rE1IwDw2
77ww86kkCqsatrRpBs/j79CsSbx3JGTzZpQ2hs2DT8hs5cTPCIS+TOH2jJlH
mMtRjhs6Iai472F3Jn4epZO8DxVOB4OubtLBnjiPH0Jsj4ZPB0FfWCTpv/R5
WLhe8/v6yg/eK5gbZLPmcZguKDD12xeFo38fzeXMo1f56WneM94QzglUsSia
R/DpreqT+92g9s4qZf8PMv/65wZSDVzg6HJp01DpPJ6F/E7RLXRCuqn409iK
eUSl02Po556j5/Kq3hs189Ac3GN6mOMpNh4fOLutfh4ualzBZhV2UBb6ntrS
NA8fq9TXuf8ewpo9ckvQ33mMDHGsE7tlifcjT59d6ZxHyNgfs4fG99BYc71/
Xe888k0eqjEyjLDii7Tq74F5xKXebVi6a4Bj4Rs/vxyZh2S2mx/rb02YvKDy
K4/PQ+/DGr+rApcQfLfyOWVqHms1Kp/z3jyJsksfB/Nn5xGUdvFGef1RLEq9
vPhogayfwQUl9xZh7BM0ypRaJvN1Ys3noRiagjarouAUhQZzW72fce9/KngM
bXuRwk5D21lO1gItHuRXLQ7f46Rh2+D98/Kc4hjNaFLbvYYGoXNu8XnH5LEt
NONL73oaJN2KTFVpZ3DR8bVQ5EYaHsQxF8NXq+PZHXMX3S00iPJJOyjRtfHp
wvlRvq00fD88MrEsZoguyT3qDUI0bMrewan1/A64BThyX4vQcPntaTNB9/tQ
pPQIXxSjIfHOv5ltIlawGih4ybWPhoqNpqFqTTaIrggd/3mABoNSA1pI3yPU
pdtffSFBw3G75Erq2Wc46nBkJ/04DcmhhleU1znD2Hi9e7YcDU6Da6waS1wR
dH6Uak3Q0HIhwV0t/hXmt8QVjKnQcDd9/ZqWCR/sYTiJfjxPwxfP0D0jH1/j
Wp+B5+1LNERcdYspfeiP3FR+7U5NGvYlneHcoPIGI0Fz30K1afBxVDz24PJb
bP2vbvc1fRqMD58uffsgFE/Pes3WGNNAee75Rnz6HdBDeV1sTYPi3DDXmeVY
cDtMCdXY09CVt/mPgl0cerb2JbU/pYFU/0W9y/FwvvqrlOZMwxP2Wf0dEomk
jvWiHAokn7+ec7qxJQ1hxg7ecm9pUFV6vVi4Ih33WR8Ingsn6xtxfJcePR3c
chrHjd/T8MwhZEBxMQOanwQsQzNp+LSNPeYMkYM9qmsYH3JoOHXrTtfem7lY
GFr2yPpK5vutYvYetzyEiXTH//lBfn5Occv9oa/oDozvXNlIwwWqTMoP+yKY
PT16yXqOhh8fuI3LuH9BgV+s3XGRhj/7827Qan5hfdYWUx8GDXM8UTtXB5Qi
fWLR9eOKBdj7+wpUi5Rj3rCooGvzAj7mm49bGVbC6ezFgxeOLeCwbl62o2Qt
NAaQr31iAfw9T3z6Emoh+kLinAkWcEDhRlTojjqU5vPefqGyAF2Tlrpl3nqs
O/w3PEdrAaf1NKnqqxvxdrPJWjH7BSQMch6XPNqKbEG18+NPFhCSEJtnl9mK
ZpHjr7IcFuDCq1FWfOwv+A5xcqi8XMC1Uetnt9CGIJUP9DtBC9gYedLSW7sD
AfZD/xIyFvDwRJ7OUYNueLealB+YJLkodCH0M+8AnCLuvpS6t4j9dVcDrpHc
r6Rze/Si+SKeFnF39hlRwcZ367KJ1SL8ry/1OfhT4fxad2vo40XIdJc+bKNS
4ep86RPFYxGzp/0kViZN4tU9qabfiYu4/C72WqMIqWOlWXYbji0i8fMh+9sr
56A2vezxZHIRq7fKLNUfnQNP6iI1YHYRux8mR203nIPf3pncX8uLkLIXMFPK
n4O/4ODFA+uWcGibo5AXOfeDWCttaQeX4HNtQiWxjIbwquCf3pZL+Gb0c7vN
hSUI5hBsgdZL+MpkrlWxWkJYzBBC7Zfw752mYGHQEvn/8Zz450sQcTUtCulY
wluR5sRvvkuIHJSyrrlLB9/a50M/A5YgL+kQF0PqpeD53aKVwUtQXra5uT6Z
jjcVdhEtkeT7Bu/nJ4zTEWi75fVU6hKCP+jdzzNbBu/NwkpaxhK431Ur7fJY
RsD5O1zM7CXIWibf4ktYhr/wlxeri5awcXJ+XVjvMl6Xa9ru+rOEltf0031X
GODOZKTva1jC+zXysY/vM+D7Lm7icMsSKqvHw31eMuBjPWci370EhQ9ypw7l
MuAlFKSjObmEl5FBR7byk3p1lUKw7uwSmKafDjw9xITndH+94cISTIOi/l46
xYRHqdRFC1L33Xc4Fn3Wggmuz+3uNhx0xIidGjd7wYR7uMuvJ6vo2HdJVmM5
iIlXVg2EGw8dW7ti2W/kM8Gp999/3pvoUHZafH+oigk3FdHcAH46ZtOOrL/T
ycRLQRvJqB10nIljX8dO6usVK7dZxovS4Z9ZF/FlJclrkyVJySRHv+JMey24
nkK4/OQVy5WgYzr87XGaIIVgT8s3/CZFR0QLZ9H9nRTCOdTo3U8ZOoTummr4
7SWfu65pq5Cn4/rOLUbGhyjEC8sMvjpFOl5v1jIaOEohWHV0r7acoqN36lEF
L8kTTqfY/TrP0nH6TtdmKsmDjgIaq0dJbnfz+3g+keQ/CgddZeoqHalrP8q6
k/z3fCLGmXadjvfjxCZekmcoreeLGHp0mG1hGp8hecehZHqZ3ZCOdQf+5oqR
PMRICZVdfZuOJHPifYoWhXj29qQdzz06Ch8K5nZeJ5+/+Pd5izkdHDWjr3N0
KMR/5v7UbVZkPkIrSk+QPHauWKK9w4aOhAzhzxokr/Ftril794gOcQXfYmGS
5wbummfd+I+Oq/7lKe9IO+PrmpgdjnR4nTI88oe0nXgSfXqc6SDkGrky/89/
xmefxrjRyTkTQjtH2oI5gyZGnmS9r4sU+pH+R9a4XhX1pcP558AuT/L92Td2
KQ3409Ef8GBamuRB14zig/FvSE6oMZr3I3lQg/PmVpNQOlhfvKBEkjy4Q5e5
cu87Ohy35HbraVKI8U/hM8PRdHhHiT2oUKcQ+Wxy3R/j6PBg2+H2T41CuGu1
Vpp+pENyVokt7wLJk4n2ueIpdMwMWRTLniN5n7k5fiyN9F/d9uHeaQoxcyXT
PyWTDuPMLeHnlChEcZz6c4scOkSU179qlacQPouTZoe/0mHFK6AtQPK+7kXf
65Pf6NjTs0zhIuu/L/rg6fQSOh4EzT1IOEjy5VnT7Ucr6Kg08g6YF6EQAeGr
1sxWk/1sLEHEkf1mOBlPy6wj68XNSGAneXE5uO/Psb90tK+6X1dD9uvRIT3n
EyPked/r8KiRPMgqR7ekj9GxpeHaoaSvTNT4hOh9naRjvtls1iSRCdNjTdJY
oJN6ai6Mg+TFaFe1YSXOZQiZnqfVH2bCsnW8gW3NMlg/KhdBgAmFg17FJSTH
Vc3+UFjHxkRLQ1no6S3LME0YsWiuJeeB6MmL58SWcbhcb/URUwbJrd2yq/ct
Q24VI7r8EgNJFQ67Kw4so9vH799vSQZUrPMpF6WWsen63pjVi8t49l3q82Xl
ZWT72EwEOSzj3809fNcNl1G69vyKNAs6tM3+7je9vYytoko6u8+QfWPrjf/u
LaPG+4MHYzt5DzxmbkdZLeOF3NnphsolGGR+yxx2WkbuZe5b10SWUMd5Xf1x
zDKKeKRMz6UuIO/TK+/QvmWoHjyTO2xOclCuXHTy0DIihjLr9I7NIbhkIrNw
lDyPnbfvIybJeS1X23tnltF0rXXfZ+9ZHGITERfnYKAS3mwOCTOI0cwtyxdl
4H5riAZP3RQ8lkfYO24zoG2xesNhvnGceRBQ+vEeA4JVUq964sbA3i/vaUdy
85qsr6EfpcbwrMJ3I48tA2E6+wtfq4/CMlRaRNmFATnPXbFar0egKeOEjzEM
LNk83RzNP4iNyfvZ7OIZUH95qvds0gBqhBt+nkxkwOyR6qUbGMBZzj0X29MZ
MDlkKzxxux9yTZW63MUMvKjhSTiY3wsRG/7Htl0M0FD4ce5FFzqHiuVP9pHf
39bWs1m4C2G6ZizcQwzo07TX0h51YpNyoVvCBANaQ8nP1afawbnR+E0bgwHp
henEk/OtGE9NzVDaxsQVjq7+TO0GJO7Stl+/g4mSDflTyqn1MAlmk2vbxUSQ
ME18cWU9uh00v9uIMxFlIbFi6Wst6i/S/3w4wYTRJ2fi/Kka5I6qTKzTZmLZ
XcGz2fcXpL3D3Ev1yD1hk8FZ6/UT6YcmRZ1uMsGxfavagM8PJFiF6M6aMNEr
sp/pH/MdwbTRsr92TJTv3fngNtc38IYoGgc+YeJQ58ljUrcK4HsiiHLJgdwL
wkqXg/Pz8fIZjhW7MhFQOM0a75sDW3a/2A+BTHx/cvjNoW+fMfV+AIZvmXA6
2HIkzyQd5ion/m4NZ6KrxHOgRzANxu59PD6xTEjXuCy/UUtG136Z5DMfmOAf
Udupx/wI3UqvM6xJTKjMXTjY+eMDNLiPOdh8ZiKFVrX5dUgsatI8BA59YWLk
d6PRwodoqKp3ZQ7lMuHbecnGpzoSpTNHL0cXMPHvu3pKs2AElINejeoUM/Fi
ZDH20u8QfDvW8XLTTybavgxUpn58A7mWIzury5jwW/0iQCwvAJKCbdeV/jBx
S3unSUunN1K+Hp5dqmfii8ue6lV73bHPwMU3s5mJfa27ap0aXBBHad1v0cbE
5ZEbRxz6HSESffDXni7yPBHZzSbpTxFx8oVhTy8TmUO3Td7ftIVAf9Ny6CDp
P+pb36oWSwS5ir+9+o+J17XX2L5LmGDDHsej6yeYsFXti2pRugHvsobq0imy
fmtezLv+VgeX6T5TpzlyTv3RvaBrqgzXNQ4r5BaZaBKir78uehAsKXVRs8tM
8KjiioEUQ6Fgd0BEE7m3uawajZyCZhSe2iuYZbCSc7E417fx1T7Ilg3JvGYn
5/gJqeMRI0qg8fuvNF9BIezaUu6eLLiCrHvyDec4KcSEkrrD2/0GsM4bjN7N
RSGE8k9Ia+jfwZE1fpbsayjE9ukvort1LUHVlVPoXkvueRXZqfA/NkhJHlhd
QOoCmeGPasrrn8KM4dsSwkMhLt8szDF0dyR1yYl4u40UQk7qw2KXpQsG3/Vb
a2yiEAapcRODua8QS/VRkthCIbL8xa/Jm3jDUFGWex0/ucd0ZFrU8l9D2K+v
fUSAQvSkdm4fsglAR4934i9yD0Qpv3AuvPEGYZIyj2KFyL1fNPng09MQaDv3
nnYUphBePbN5XmXhaBQ93iO7i0K4hTsPf3ocjb4/ZicJMQpxXCvtmVxgLKb+
i4o9tYdCLMgxHotUxGF9I9cdNXFyz7RLZZh6J0LICaVXyb1U9Dhn+wv+FIgf
tN6rc5iMr6dk38EbqTjj2v7PmNxjoV736jQOf4bmkQ0XTKUpRK7Tsd09SRkw
6jidYnmcQqzfWDUxJ50FR+lUyydyFML8c9l5jYc5yB1wmvVVJve0l5IJU/kb
Sv2+aAaRezVn/uCO+WNFaFQY/RJ6hkKkT50IOSVRjOmgq4/jVCkEj6TG2Afp
Eoir7GHmaVCIPqPgM9/dS/EuvpJz0IhCaF5hzbPb9Qcp6qz3Rm9TCPHtc80f
K/4gnyn9e9KEQmRWuF58ZFeLZq1IL7oZqWM0R6IL6uuwgfPhhg02FOK0sF55
YVIjnE34BOVdKMTuc496G0rbYLL31iH/96Q/uTzq54P9EOLyH7KJpxCd9yMo
EW/7UTdSHHUtgUKITJwtY+UYgEKSCK9QMoVQ+Ll+Vqx9ABsP9dA+ZFCINetK
9ir5DaHg6M3igu8U4soH1Q6W1aPgJQyujnST9Z4R7lNzm0S5sM+6yl6yf5Ol
yyS+TcKBpfDXp34KsasKYwvzkxgpFpK1GaYQ1/2Eo6XuTKHwVIcQZZJC3JVp
u7JReRr3zusNbaKwEB6saqoyszMo0tR5oijEQlxRKBZM20XDT79NparCLETY
wTzRumskl1ZV814TYSHYJWLOOXrS0HxaOcVcjIV4sTJ4m/0UDVTpA92hB1mI
j076Vl7ZCxDawjw9p8BCvD4sb3Fr/xJ2qef4syiyEP4S4glSWkvY5/Owa81J
FqJZ3u7iA6clSK0cerRThYUYzNcM3ta0BNX5miS1SyzEqf3r0vhJHfm4KXpD
ogELoZd9i0JELOP5Rj2DrJssBPNAWER/4TJcL21JKrrFQvCU2fu0dZE88svj
VPMdFuK76kh/jjADH75Y23NYshAdjVsVNgUzkDJ98Ae3FQsR+LplaXcGAxmH
hnkErVmI9cpZYs7VDBTG6yUesWchbvKax2xiZ6LxzekOg+csBLfkhq+vjMg5
WkfZb+rEQtQp2wrUP2aiZ32ena0zC0FtiP9m6MvE2MtDPF5uLMQ/gcM7z+cw
MfV9WC/YnYV427mZL7aCCRoz5mOMJwux8kLNT5C8wW7Pp5zry0KkPPPbup2F
nFsZtb4//FgIg9u/ldRWUQhuqmd7TQAL8d/mDHURco4ImrDYDQazEJ3HjtE+
bCf7Kjbv+1QIC7G2V/+JHnmP93TZcDPCyHhPK/xKJ++t5LWRBN4oFkLj9ZNq
kPeuq/TdxeVoFmLZUV5QhNSjnjJXp/tjyfeDxyNNkZxbH7mCq+JYiMbH3IfG
T5H6XeCb3JcPLIRhw6JQ81kK4e9h0/3uI1mPfwdsLEg9TND3ubolsRBeR8Iv
ZZB6ecysa9+DFBZCLL2sOo7U0yHtgdXXU1mIcP8cARVSb6tcPG+tlM5CRHpN
XAsk9fhMAYV/fwYLobjPMOs1qdejDmV93ZhFxjtsZfj/35suRpoa0r+wEIJE
v08gqfeXuHes7M9hISTtGqzDSR744NiYWJnHQjTc+XROg+SFq1MeallfyX7j
F72YS9qstxRnIwpZCB1F0cJq0v5UN/f2ZRHZLzF/ugJIW1c5ScHyO9kPmjYL
q0h7VebN3ms/WAjTycdXDpH+s0S3uCn+YiFqAg2Pc5DvvxVUIb6vjIx/6Mui
B8lD3Cud/mz4zUIkjq8c/U7yUr7dMdulChZisrbxZjLJU3eHRgX6qlgItaDA
jDMkb22+Hl1YUcNCHCJ3cRDJY8VlWkaZtSxEji3nzSCS1yxk166KqCfvQ2XX
o7PkXBNMLE52bWQh9FXbxj6Rc69sq/0Vi2YWgiXBfGc5OSdtPQ/Ma7WyEFdn
sl8EExSi5n4wsbeDhRgx3WqrfozktY4L/TxdLMSDPttB4gjJF5fY3Be7WQgF
liXFPrI/nA+b1/3uJ+ORNPW8uINCSETttM8YJOvprGaxeSuF6OBpEQwfZiH+
5MvuCOKlEMemT942H2MhBFR8JwvIvdl3a4FLa4KFENrqs6+WQeqS+pRPmCS/
b8UlGkLu9ZFM/gXuWbLf5Z/ZvSL5I8J+wuMznYW4Y1Gpzv6KifPDsYfDGCzE
T6K1kdeWvB/XtRucKayE6KApPcqQ1I0nfghpsrMSJUaPx6RlSV3ACEmjrWYl
/qzw0rrfS+rSF6eb5LeyEueK9PtEt5O61f3PoOA2VuJDW/+3raQOd/HTpS0J
sRKGLz91xY2QOj7Kij9XhJXY90N2lVMGyQmFETrS+1iJeXoxLE8uQ5I+13lQ
hpXYFifwRv0SHYvW8UPbtVgJ63tuoil7FuH69MgC4xoZT9SatG62RWx0/rqq
Q5uVSAwIK27oWIC4f92+MH1W4njMHRaOgAXopzHN+G6zElfShWPilmgoGtOa
5LZhJUILWav3Fc3D7TbnIos/K2GzY4NfxsFZGJdti1gVyEqcWGWsvZplFkri
kko8b1gJd1VP8XN1M1ia1HMXDmUlTOwsTFztZmD+32cBxLASpjKcW8UKp3E1
QP/E08+k7RaTc1N1CiLFGU/n6liJnnuXTB1qx8HcVS7MaGAl+remWAvYjaPt
ZWcJRzMrETdGS+rdOo6gC1xrN7WxEhT93Qtct8ewqsUgXLKPlZis+9U8Tf8H
6gRXgeUMK2FGv5t5+dgwvm67yRzhZSOcuQc8toz3gsh8sFS9mY3YS007dDe6
FyWqTvMZfGzEbfNP34S1elHxJGbimSAb4fQtN/RXUQ/aWvo7N+xiI2ySV7QI
hnWDHnjvm6wkG6Fv9MHieEUHnh94kr9dio2Yb+pu/qfUAfYfHtnsx9iIK7rm
X4Jy27FmJim1SpaN+Om6368tqQ2CVyYiDZXYiKTajTtNw1txYp21o/tlNmLY
eNjWM7URBe+d/7NQZyOOcPlllR9rhJJ84CONq+T3u/cW7fzWgHNmWQ+ErrMR
Dr8fLR+or4d2Oe1m+g024kFmRFfTqjo8dv1PqdWCjZh+FrJeWLsajG3eCoUP
2Air1UMXPnpVwSkzQjb2IRuRu36oKup7Jdz7Co+Y27ER+R7Ud33SFQhRYt3J
6sBGUId9q7lOlCGH4cq2z5uNMHu0eUwm/zu8J3f4H/NlI+gagdPKXN9h2Jcv
csqPjfCrkXiso1MMrvIpxRtBbMTKojzNrBVF0A3Ufx4UwUZUXzGfbmf/isNu
C+tjI9mIzRH7COXaPLA/CXiXFs1GbJB2Dvj3PhfJN8oLKuLYiARZk7XcN7LB
2C+9zPqJ9N8i9ltcOAO1Qn88udPYCPsDXzL5hD8jnsdMUOgzed46IQETsXSo
zUedkPnCRmS8Dr1FnE7FrhG536dz2Aja28QtUYUpoP2vgzOPprJ7+/ipcw+F
DMkQGaOEUIqKXFeGypBSRCpKhkYyVtSTJEVkiEJSyiMhGkTJmOmoTKnIEAmP
kCQZO857/94/r7X2/l7jvdf+rL3W3d5sb/2KjRdeah/5l5cFKa8X+HuUsFGF
HH/hk/YQ/J6nzz9XxuirzwZZLEgHs3SjhLByNio5e/UpXEiD0YgzL/6tZuMV
r7ji9sj7YLynd7ytno1zTXsHdsUmgaRFYMj3RjaOpd++JqidCEMG0uITTWzM
3mhbIj50E+KUrNYubGHjnpr3+qseXYejEkMVcq1szJj+YbzreTQY8F22XtnO
xkOyLvcrciKh72eh99YuNla+StWobLkCBd227N3dbMRgqZrSwksQ+XE05lAP
G/NERko4H4PAmROh6NnHxszLcc//WxoI616pPP2nn41+QhILtlsGgEB2+abw
ATb235sTq1jiB113HRoThtjY11ydap/oBbnXpw48GGajttD9fIHSExAaEjuS
O8LG1vJ5Sa7ybuBwRjPw9Sgbn6ZsFG2zOQirj78Rahhj6qs8sHe21A4oR5c7
HeNslJxs7akJ3AGtVizNwUk2Xq3a7nfikxFkG98qnpxmo6N/vpz3nDVwUVfH
kuIy8/eTsPpCLAE71cYOUR4bN02Yr/wZ1mugLnP8hMIcAuONOiOTNEYMWMI0
V4NNIMg8i26dLw8f5t4L1ycJlD/wOWzr07WQ/kd/iRlN4N7823+cSRM419+c
aTufwPpQh2+hRlaws81Lz4WfQI3w/z7ysvfAsroFb70WEPiT/0KHf/dBmC5N
tw8UIjAyRMfn/ms3qHtmNBAhQmCevcP2nlPuELQxtzdalMDVnyD68rAX6FQr
fY0TIzBOWUg1nz4FAzvi2hMkCDwWMhjqdTkAklvJltuLCcziTP/4oBMIO539
mlKkCeSFfBxW7ggCariv7l8ZAtfrDQ/fy7sEJ+ZwKh8pENhw3mF0Ym44yF9d
V/ZkKYE6bZEZL30j4cOih4XPlQnsKddwKYqIBn2VsGdFKwh8/OCOzbfzcTDy
ZDq7TI3A1tbVaVJ3bkKq3rGMypUEvh5uDH3enAAC2y1SalcRmCDyu+VPbDKU
thQmNWoTWLvniGxl+F3wcVoZ/3EtgZtHi0Qet6VAu69gZMd6AjPfZinY3EmF
zKSGsz82EVhKK3uaF2WAw7JNp38ZEThg+ihUwDkLFj5+4v3HhNFnb1U1ksgG
//KYo1xTAlXL4j4FND4GswFruwU7mXqN/r1y4EEuzHpX7hKxJvAs7RuzPus5
POWu3S62m8AM7RnnVfl5ICUisVnGnsBkzdseJzpfwHfdz9ornQgsczdySzld
BEllppqrnJn+mpuXzjwqhh3mBaprXQncQfBUdn4vgRcOtxQ2HiWwJGZT6891
ZXDl0n6hbV7MfASlRE70lIO+UB2flQ+Bq5YLL7K8WQEj8QaUjR+BAjJ2WREW
lWCbJcfd508w37NaYGFJFSxr+jpwPIjA/TbbFII5NVAp71oVHkPgjZxZPk+t
BpDvbFzsHktgCmdDT2J8A/jf3nhi+w0CxYxNs37NaQQtKbFFCxMJHE/1yZBr
aYQk0YqDN1MIFH6rZLU9pgl8KEVuymMC9X4YbvDTbwaloQ7t/DoClw57t2ra
d8L5DNPL8Q0E5ubWX9vX0wmth5+3nnlP4Fxnk8oC3S6I6g2/oP+JQBX5MLlV
FV3w94tefVkHgf/EpAt5dH+FD40JR98NEehrlK7B0u6B4HyblK98JKqIKXRK
Sn0HrUbzK4MCJO5wtZrl8/oObQObPP4Ikrh48leF5ZvvsFpWY+N8URJ5lLTI
64AB6AymPmtJk2glWFUl1j0IG3bmCweqkTgXtvhZFgzDyJBkoKwFiVsGVcZt
jEYhiRJyU7EkceHfHTvHPEdhizxpuXoHifUhqV+i7o5C8q5f0putSVwlZeFV
zB0F84Ka/BP7SOznV9xfmv8b0i77/yw8TqKsl0QtV+UP7FNsd9gbQaJZ/vKO
jrEJyD5Ze9swksT3OzR9TGQmYU5JcfuKaBL/TMzzPGcyCWl7U+wnY0mMdvP5
YhfH8GGs6+64JBKDG3w141ZPQTD9a1t9JonNbN9FnQen4ZNNd3jeIxJ9xr1i
7oRMw4rUpre3c0i0aU00Wpw5DXWYZ3r8GYk5aqeOrf49DZL+ASbzX5EYez1B
pOn8DGQNkRuN3pA4pFcgExr6F2Y3TASoviORdD9crPHwL1iF9heI1JHYepZ3
2o/zF8aV367raiSxDpdd7yO5gI5Ra859ZvK/6Tpf8SwXYh5d8HZuI/GVWLLc
k3gu9M54PTXvYOI7F7q0mbkvhsXbaEl9JXGEP+Vc9yCX6beUen4/iRqHfR42
WM/CMnmBY8kDJOYV127/dWIWzrhzH14aInFt8KhacsgsyPJ3LbceIVEzSt3m
Zt4sHDb+d+mvCRLb3b9lfhPmQUHMDaeWKRLFjhzTMlzGgwVfL6eUzJD4vetH
g6IeD56eOyp3jcfE14nRLod4MJOnKa1GU1imd2my/hEPNJLGK+fNp9DR8bQL
p5gHBy4Unezjo9DVpL3PgLl/V5ibV6UIUhikFkrcG+bBuNZCz/PCFPIpFMWH
c3mgIv5Zev9CCi9N5cRPkgwfdrl6Sooz+tebjGNEWVhcuXLJuASFCcrzHk8u
ZuFIxlhV02IKdw9YrJGSZ6G1b9CSSBkKNYa9n4ersTDE3rT6uBxjh7vUtWux
8AUIe5kpUHj5V8K6vrUM3/AlV5PKFF4htlgtBYb3fjp7fVtGYa3dy5W7jVgY
+EFNpkyFwgdWvvm4hYVPX45WJ6tSyDngeLXbjOGP5JdeZ9Up3CfyZqueJcNX
wYEy9hpMvmnno82sWLj1yBaOrhaF7plv5wtbs9DfUtBbbDWFXn7BdlcZHs3S
/ijzW5vC/YmLlhcyPPpFMonTsJbCxabBCvcYHhWedfLO1qXwSGrQ+P941PDb
Ctnw9RQm/3W3/d/7kw9nhHNEj/H/9+BkJMOLaY/yvbdsZPIr1YnawvBkS8w/
ssrA6Lddb3nK2HynTWrmbqJQ2nAs4n/vX/r7BXy6DCkklB573Gdsd8Mm2WJj
CkUzmDODse8uT6y5tZlC/2SFCkdG/73AQZ8zWylsnl5eYcr4J0aXy9maURi+
T5+/j+FRnebhmjUWFIo4hLmtYeI/XPjcZ6Elhac+bMtYw+SXmHJWbmQ7hZtG
Wh/0MTz6LsToTa0VhU8xTdeM4fXZY3y+mbsoDIm3WOPI8LyWVaNcqA2Tf1Ni
gDLD+0468W9cbSlcGhA3nGTKwlhpR1/jPRRmmwd6VpqwsIq1TF5xL4Xb4noH
kzexcLJ36A1vH4UPA25vXbGR4e3H/vKvDjDxWoq57NBm4bW4TW/jnSiM6Tbl
/7GShaX+8/z8nCm88aX6wAYVFiqZ3Hi76jCjr6Yq8B/Do7tV9/sJHWX6d3CO
82YxFl4RUlL4cYxCe2KRx25BFg59fuKX7kGh32H6ugiPB7IlpxVCPJl5mVZ1
383w6I5UeHfIm5lnyWwV7hce5LrXKsidovBJ3ijbs5AHZ9nf38X9Q6HJniKX
KQ8ezBpt4E8KpPD6K9Gxq3t4cCH4qum9ICa++H5FN0MehJAaVdkhFGpJ9MZN
ifAgkvYuqb5G4fTiupC76bOwcGsFtzaKQluWREho+CzEXhHT/xBD4be+4eRS
j1mIn//iRdcNClnuAveXrJmFe/zcJ1PJzPpKgd9pzHmjZGE5wrtL4aJvdl7S
17nwIPyOBnWfwlCPYPW+k1zIWmCYufABhd6rDq28qMqFPKHLqWo5FP43VlXA
i/sLNaIiN/eXUFg+bpKxdfsMWFg7fTxURuHJ5Pg7nKUzUBf7TPRoOYWv4wwE
8iem4b3Y7ii/agpPWwlW992ehnaJW6GR9cz85V605XybghFp5bNlnRTGdms1
HbadBHGl9QeVWTRmf/YpeTQ8BphwaWLeXBq1LNKiVV6OwRHB9xFDbBon784Z
d7s4BoWTRwue0TS6iMeSBhJj4FSbJGooRGNafr7BVf3fkO3HqnKQpZET8tKv
5fwv2FxTrRqvT2NlTtTCz+ODcNJgUVmAAY233PkD34UMQsKzA7aOSONGMr3w
p/ggDN2eurjMmMbSiZDwNt0BiPFS68g1Z+IxduN+PdsPX6QjIxvtaTye4PbM
W7IXTrnvHuM7Q2PC+pSw934dsETHmbMsgMZTtUq7Q1LaoZTrmWR4jsYTsVuk
99a1AV9EhLH/BRrV5ZU2JGu0QnJmRez3UBo1BFQ85vI3g5H3+8NkOI37bMa8
dbZ+gv4NXfoK12ikcywO/7n8EVa/memxi6GRd2eX52ahD1DVv3otJ5HGCPF8
33CDRjj2GOf3JNG4xVLs+MnoBhA+bdnBS2b8378YfL6uHuzpo5d079NYNqFO
3NKthR/KKR/TMmk8u7T/b8YuDsT8yH74+hGN6YphRVdVq0HneeG5Lzk06vlb
Sf2gqyDQuEVZPJfGbjOFiX8+lcOiQ0J+lwpp/LREtYkTWgIvVWXMUopptF2j
rp56vwgcRlVli0pp3NUnY3vn7StIv7C5aqyC6Zdl6jbvzS9gm6l1onA1jet0
Qj9cSciDUWEnd/UaGuvNGpN1Z3JB7+45cedaGqmigW/1A0+gy+3qwPl6GsFa
0HH49GMI1kwovtVIo5qCk7a8ejbUFee6Nn2k8UhyXs7pmXTwDnm94WczjUF2
Xo//i0oDScsGQf5WGsN8a6VFTFLBqWMwz/ALjXyvcsK0+O4C/e9UmEMXU/+g
Eb4unSTIOk47+nfTeEFGMW3qZjxYrRHTvtFDo4B9YsuQbhyMzyjST/toJLU8
rMfEY+BWuVZbbT+NC1ZpCkYcvQZ41SDn+wDjb7/PCrVlodC70+Ii+YNGFdXc
B7IHgyFMyt5W4SeNSS0VMQXSgaDZ7aa28ReNqVFGsTFZp+HDQ1+e3W9mvix4
k5KKXnDG82KTzx+mvu2BV8a0joDs+ugHURM0HhpK6FwpfwDKWXcCsqZoFJVx
+DyhtBMOc7K2c2ZojKo54OKqgCAQVbC0h8vst5sfPqggD09sORM8Ho3vPkj8
//8Z/w//uQ+7
            "]]}, Annotation[#, "Charting`Private`Tag$7708#2"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            GrayLevel[0.5]], 
           LineBox[CompressedData["
1:eJxF0XlIk3EYB/DXPF6RzAQb5YXnmymxqCxXeIeiZVrh5tVq081lay4pzzSP
ZmXbUFeQmdcfoqIEKSneWh4LcxGORGoeS6vNymPmteYq0Of3wMPDh+8/z8Pj
yEy+yNqFYVjYv/4/18/yKiKS+T7YdhUmHHR7T5z33fHor9kkEUEHL7YECrkE
D5xP0tjGETngkeHQuUuEGJxcnfo2nKgE9wuFnWHEC7CxSQquSurdtkNXyF2G
4BV1GPK2DJai9oMMPBFznZySNga2DBax+/3GwXvlrOaTsZ/Azg7cBgFzCuyl
uDHiXzqD9tnMPScv/wLm9EqlPflz4LL4Out9V7+BD0fNrG6xVOBJTbjML2Qe
vDx14Agp8ie4uDEzkUZbABMWpmHp5YvgVn5uo7hqCSx3leAXSpfBLgVjbpfL
NGBKxNTxqvIVsIIv8BEJf4ObKdHmgyWrYBJ1eKJesAb2VWIlr2+to/tIHHMi
fQP9s/Lafc+kTXCF7OmQmK8FZ/Mki3Ypf8DzDLf90Uwd+JFObTTJ3gJ3/Ahe
2BOjB3909VKecsH8dsw5FE+W1CL3U2Oz/O0NwMei1A1WNcjcgqBxb5td4Ads
000DCXK3HUOvtjIEt28VGrqLkWUtgWqRpRF40IE9JCxFvtcWWTNjZgyOc/pM
jxUha1vJNh64CfiOoerdkxxkkguF4Yrh257uTONRV8wycMhtTyRIiSzkPt3N
5wHZyGYi0ZnMPOTKxoHHqofIQ9+PekqfIVvFW6QKupDb3e1Ca3qQ6cvu9t19
yPV5QUMrA8inq7NJCaPITMV8a8DkjvldeO1GEX0a5U1c/EqmEnlV64Q3f0Uu
so6hOS4gk5WJHt5LyPKG2/ooDbI9paSueA35DVaV1bSBzJE2hUu1yLuLO5xn
dcgvadI1vR75L19ZHQw=
            "]]}, Annotation[#, "Charting`Private`Tag$7708#3"]& ], 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            Thickness[0.01], 
            Dashing[{Small, Small}], 
            RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666]], 
           LineBox[CompressedData["
1:eJwVm3k8VO8Xx2fEjFBKQinKVllKKZVvOU9SSAlFRVoU2UJCtC+SsiRbheyR
ElmylHrsO1nLln3fZ7uFod/9/eX1cWeccz7nnOfe9329bLR0MrbioVAop5ZQ
KP//+Vff8Y2hk7Omx3SE2FmZRE3vy5s2/1AwgJOPIbrgmBfUTg3Y+SucAzF7
df5rx0JgJvOgn4OCI5iGasfUHk2Ah2KsdWcV7kJ4UnGc/5EsqC4/MnhCIQDQ
nd6h7AMl4BTjXnlcIQoUnyTXhUk1w56sfoWH4tFgYlLecCe/GSiXN2uZ8cYA
v1TY1vVmLVB5IzTajxMDU3045HbITzCLdjJj/IqDW6I5DY/42uD2lGz9l8hE
WGdepjny8zcU+vl9PaaQCt0WnlcDQvrh+1hbjWByKizT9+NR7O+HfN1NXZVK
abC2K8jZffsAmPNcpMRLfALiktrh9bUDYPJ9XkZaKh3ePug2fUQZgiPq223E
t2SC246fJvmmI6CmEMmkQw5sg9PVuXkTsKNFa976fg7YfToefZk7Aapeo0vK
CnPgr1zcwVjNSdjap77aSzsXAvuKkysLJ2FzVMNuypE8mJrrhoKiKVgnRr/z
9+RX6OhrO3j01Azw0Vzoo3YYyiMmOWGiTBjRuyfMSsLQ+d1CLFSZCVX+fuIL
Axis03VenNFmQvmzpmCfbQUgZBjUvPM6E3xFpuIjkwtgXDvo0bY6JojKyJaU
vCmEBi37jhWeLOAr2VKhl18I/c/f6l7wZwFhpVpT114IKw09/K/HsqA1eX9z
q3gR3OmWkh+sYMGb7acHJl4UQXjEvrsMUTYoHPDnXe1dDL/lPEXDY9kg3h/M
H55QDH836GySzGAD/+NwIeniYlilfvXTuSI2jFUkiW6hlMBT7WVs5T42pBkW
ye2/WQLB4YIbB6U4EMOs2Fz0qgQerrDGHiocCAr5oayTUwJ3BUL96v7jgGtr
504jdgl0yP+MLzjFgT0X/mhbOZbCikpm0Hc/DmzhWdQd8ysFCcvwq5dec2Bt
Au8xpw+lkD5U7lL1lgPc4ZUmniOlsPy/6WXd3zhQ4KRs5W9ZBkszfu2WHedA
+ko1W5EHZfBEdUG4ncOBuMy9V19Gl4HPs1aDExQCvP4cdovtLIOHZYe2+4sS
oHfv4uPPpuVAaC4T2aBBwI7nhYdjXcvh7hB9eYEWAeuiN/L7B5XDV8NaPXl9
Ama+9z67XFcOEvHmVWBOQHvdgaOGE+XQmk5X51gSUNwVu2yfQAWEuB3Y5mxH
QNjixcBVhytgdnHNxhwPAu4vLzL6d6kCRg+I6zy6R4CdlMyq8QcVYJNnbrLa
m4D9mn2hRd8qQClzQ4BvEAEDdywjru2qBEqv54nidwTU+RedtThRCW3+9NeF
HwnIfSMjpXetEjqXucR6ZxDg+60vZsPHSmjpAXerrwS41mpZClVXQvxdqYf3
MAHnfsfJ/h2phNwvNT8uFJP1Llgm/pCrgsAjh3I8q8h6lxVf+apVBXfR+rD0
WgJo62W3JF2ogsS9nSi9nqxf+dFY0N0qEDTM6fBoIqBtX/+Hu5FVcF3dz5f/
JwFFRw9etftSBR9Rt9uFVgJSzsZvNW2tgg7btoL77aQfDktmDhBV8OX04WDb
TtKP25fSVUSrYeFikKhkF+mHX7HLmh3V0O1T4RDaTcDJSNmdfIbVsHgnsKS1
hwDNlEecmavVEBSpfGiwl4BN+f3Znb7VIDx0Q+JrHwErag56VCRXgx2338as
n4C5jvi9WeXV0Lf2xsViUg+ML5mPHqyG0GVVKgSp6+Yv5fsuqYGuTbQ5Jqlz
BUvu3NhYA/57+5l5pI6TlINLUAPyj94e0ie1n5IX5bhFDcgkS25IIuO5/TdQ
qHGrBpwSIz/Vkvmc09d+pPC6Bni/8ylgMl9d8wRtkZwaGLPPTbtF1rPDnpe2
2FwDkSav7iwh611363L5KLMG+vYuLTAl/aD5lvi0rKgF6JlIciP9mgmXO1K4
tRZW8sda/9/P9vdegh+P1sLZUwsq4qTfxV8Gal7Z1YKTnpFqONmPlCrtAC+f
WnBbbxkzSvYrrD3huHNiLfwpsUnnqyP9nbvcqNNXC8tsrj1OKCf9FSgNVqPU
QZzC6vRNJeT8rZU3kZaqg8F1UwYeBaSfGoO/iDN1IJ0mkfMwl/RT79Drvht1
ILdgOrkvi/TzzFuzutA6aKuIvlqaRkCOp9Xvtw11oCBitVkrkYBETftfa5l1
cLFpSKo8hsxnybWG5yI/4F3to1iRCALc/W+Xep74AUV6PvaLAQSoxwZ/PNby
AzI+hQlvdyVAwfp1UhHnB3QLn73AdCDnO/RHvaRgPTSZfnp624qAW2YtVYFK
9SDVtixkwoQA84Ge7zcd6uFAu1TXwZ0ENJb1//f5dj388xDTOalEwJHkodxp
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
            "]]}, 
          Annotation[#, "Charting`Private`Tag$7708#4"]& ]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
       All, DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {
          FormBox["\"x/a\"", TraditionalForm], None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0., 2.99999993877551}, {-3, 3}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {Automatic, Automatic}}, 
       Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
        "\"Lattice\"", "\"\\!\\(\\*SuperscriptBox[\\(Bloch\\), \\(2\\)]\\)\"",
          "\"Re[Bloch]\"", "\"Im[Bloch]\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.09], 
                    Dashing[{Small, Small}], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                    "]"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.01`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4444444444444444, 0.4444444444444444, 
                    0.4444444444444444], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6666666666666666`", ",", "0.6666666666666666`", ",", 
                    "0.6666666666666666`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.794222071482154*^9, 3.794222781740192*^9, 3.7942234949493346`*^9, 
   3.7942241948836255`*^9, 3.794236104689997*^9, 3.7943082466397624`*^9, {
   3.794308288758927*^9, 3.794308314293769*^9}, {3.7943083596442394`*^9, 
   3.7943083819563026`*^9}, {3.794308420246484*^9, 3.794308431721115*^9}, 
   3.794308476865819*^9, {3.794308541940359*^9, 3.7943085924107695`*^9}, 
   3.7943088188647313`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"fd9005e3-b877-43b7-91d4-38dad44bf4c7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wannier Funcs", "Subsection",
 CellChangeTimes->{{3.8085474176802425`*^9, 
  3.8085474218700304`*^9}},ExpressionUUID->"18fd16c5-5fcc-4bf6-955c-\
6e2af4e11bd8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    StyleBox["Note1",
     FontWeight->"Bold"], ":", " ", 
    RowBox[{
     RowBox[{"Ref", ".", " ", "W", ".", " ", "Kohn", ".", " ", "Analytic"}], 
     " ", "properties", " ", "of", " ", "bloch", " ", "waves", " ", "and", 
     " ", "wannier", " ", "functions", " ", 
     RowBox[{
      RowBox[{"(", "1959", ")"}], ".", "\n", 
      StyleBox["Note2",
       FontWeight->"Bold"]}]}], ":", " ", 
    RowBox[{"Even", " ", "though", " ", "the", " ", "sum", " ", "of", " ", 
     RowBox[{"Bloch", "[", "q", "]"}], " ", "and", " ", 
     RowBox[{"Bloch", "[", 
      RowBox[{"-", "q"}], "]"}], " ", "is", " ", "either", " ", "real", " ", 
     "or", " ", "imaginary"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "wannier", " ", "function", " ", "cannot", " ", "be", "  ", "calculated", 
     " ", "by", " ", "summing", " ", "Bloch", " ", "waves", " ", "up", " ", 
     "simply", " ", "with", " ", "the", " ", "phase", " ", "factor", " ", 
     "like", "  ", "\[ImaginaryI]"}], " ", "+", " ", "or", " ", "-", 
    RowBox[{
     RowBox[{".", " ", "We"}], " ", "do", " ", "need", " ", "the", " ", 
     "phasefactor", " ", 
     RowBox[{"function", "."}]}]}]}],
  FontColor->RGBColor[0, 0, 1]]], "Input",
 CellChangeTimes->{{3.808547406274763*^9, 3.8085474062787523`*^9}, {
  3.808547509295594*^9, 
  3.808547517371982*^9}},ExpressionUUID->"9df87b78-7e45-469a-ae97-\
922395564f17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PhaseFactor", "[", 
     RowBox[{"V_", ",", "q_", ",", "l_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OddQ", "[", "l", "]"}], ",", 
      RowBox[{"Arg", "[", 
       RowBox[{"Bloch", "[", 
        RowBox[{"0", ",", "V", ",", "q", ",", "l"}], "]"}], "]"}], ",", 
      RowBox[{"Arg", "[", 
       RowBox[{"Bloch", "[", 
        RowBox[{"0.25", ",", "V", ",", "q", ",", "l"}], "]"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"force", " ", "phase", " ", "at", " ", "x"}], "=", 
    RowBox[{
     RowBox[{
     "0", " ", "equals", " ", "to", " ", "0", " ", "for", " ", "every", " ", 
      "Bloch", " ", "waves", " ", "for", " ", "odd", " ", "band", " ", "and", 
      " ", "phase", " ", "at", " ", "x"}], "=", 
     RowBox[{"0.25", " ", 
      RowBox[{"(", 
       RowBox[{"or", " ", "values", " ", "close", " ", "to", " ", "0.13"}], 
       ")"}], " ", "equals", " ", "to", " ", "0", " ", "for", " ", "even", 
      " ", 
      RowBox[{"band", ".", " ", "It"}], " ", "just", " ", 
      RowBox[{"Works", "!!"}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qqstep", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Wannier", "[", 
    RowBox[{"x_", ",", "V_", ",", "l_", ",", "xi_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[Pi]", "*", "I", "*", "q", "*", 
          RowBox[{"(", 
           RowBox[{"-", "xi"}], ")"}]}], "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], "*", 
          RowBox[{"PhaseFactor", "[", 
           RowBox[{"V", ",", "q", ",", "l"}], "]"}]}], "]"}], "*", 
        RowBox[{"Bloch", "[", 
         RowBox[{"x", ",", "V", ",", "q", ",", "l"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"q", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "qqstep"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"qqstep", "/", "2"}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"\[Pi]", "*", "I", "*", "q", "*", 
           RowBox[{"(", 
            RowBox[{"-", "xi"}], ")"}]}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "I"}], "*", 
           RowBox[{"PhaseFactor", "[", 
            RowBox[{"V", ",", "q", ",", "l"}], "]"}]}], "]"}], "*", 
         RowBox[{"Bloch", "[", 
          RowBox[{"x", ",", "V", ",", "q", ",", "l"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", 
          RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}], ")"}], 
     "*", 
     RowBox[{"(", 
      RowBox[{"qqstep", "/", "2"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nWannier", "=", "2"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", "st"}], ",", " ", 
    RowBox[{"2", "nd"}], ",", " ", 
    RowBox[{"3", "rd", " ", "band"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xxstep", "=", "0.01"}], ";", 
  RowBox[{"xlist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "5", ",", "xxstep"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wlist", " ", "=", " ", 
   RowBox[{"Wannier", "[", 
    RowBox[{"xlist", ",", "Vlat", ",", "nWannier", ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ltslist", "=", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", "*", "xlist"}], "]"}], "2"]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"lattice", " ", "potential"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wlistNorm", "=", 
    RowBox[{"wlist", "/", 
     SqrtBox[
      RowBox[{"Total", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Re", "[", "wlist", "]"}], "2"], "*", "xxstep"}], "]"}]]}]}],
    ";"}], 
  RowBox[{"(*", 
   RowBox[{"Normalize", " ", "the", " ", "wannier", " ", 
    RowBox[{"function", ".", " ", "Here"}], " ", "wannier", " ", "function", 
    " ", "is", " ", "assumed", " ", "to", " ", "be", " ", "real"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xlist", ",", "ltslist"}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xlist", ",", 
        RowBox[{
         RowBox[{"Re", "[", "wlistNorm", "]"}], "^", "2"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xlist", ",", 
        RowBox[{"Re", "[", "wlistNorm", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"xlist", ",", 
        RowBox[{"Im", "[", "wlistNorm", "]"}]}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", "\"\<x/a\>\"", "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(Wannier\), \(2\)]\)\>\"", ",", 
      "\"\<Re[Wannier]\>\"", ",", "\"\<Im[Wannier]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Gray"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Dashed", ",", 
        RowBox[{"Lighter", "[", "Gray", "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8085475326990547`*^9, 
  3.808547589948086*^9}},ExpressionUUID->"9188639a-c4b9-472f-9818-\
9b5b43b87bd3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bloch wave basis, periodic potential + linear term", "Section",
 CellChangeTimes->{{3.7942912838459578`*^9, 
  3.7942913054050455`*^9}},ExpressionUUID->"fa7f32b3-d967-467e-8c5a-\
c9cdcf7ddeb1"],

Cell[CellGroupData[{

Cell["Dispersion relation", "Subsubsection",
 CellChangeTimes->{
  3.794291317597755*^9},ExpressionUUID->"1a5a1d2e-4700-4bad-965e-\
6f267cdeb8b0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.794301347514227*^9},ExpressionUUID->"773aea6b-ed3d-4160-b913-\
c5ae557244ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 467},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bed27da5-b1ad-4223-996c-ad722b4471f5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 98, "Title",ExpressionUUID->"b0e97a96-1d66-4bda-946e-ca50cbc71a53"],
Cell[CellGroupData[{
Cell[766, 29, 380, 6, 67, "Section",ExpressionUUID->"9b7eb8ba-1c01-40f6-ac95-019a5884ff0b"],
Cell[CellGroupData[{
Cell[1171, 39, 174, 3, 44, "Subsubsection",ExpressionUUID->"61c125ed-775c-4baa-951e-5d2dbce40814"],
Cell[CellGroupData[{
Cell[1370, 46, 4828, 134, 278, "Input",ExpressionUUID->"b78e8e6b-6c10-4a89-94a2-6f5c53a440eb"],
Cell[6201, 182, 11773, 212, 252, "Output",ExpressionUUID->"1f71d9c0-47b9-4b10-91fe-d14496bf57a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18023, 400, 160, 3, 44, "Subsubsection",ExpressionUUID->"9582ee4b-0a7c-4f25-9d53-8ec5d76fd802"],
Cell[CellGroupData[{
Cell[18208, 407, 3701, 104, 184, "Input",ExpressionUUID->"1f621b2d-5762-4db6-a3f6-997d948fcc30"],
Cell[21912, 513, 1041, 20, 93, "Output",ExpressionUUID->"69390f8a-bdfd-4eb7-b118-8cc3f328e929"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23002, 539, 211, 4, 44, "Subsubsection",ExpressionUUID->"bc429d80-8ac5-4b5d-bf3f-ec09d24cd465"],
Cell[CellGroupData[{
Cell[23238, 547, 3372, 90, 203, "Input",ExpressionUUID->"f62a291c-c43c-4f09-bd33-45ddfde707b9"],
Cell[26613, 639, 1086, 18, 112, "Output",ExpressionUUID->"7747e1c9-fc1a-4df7-a715-15a5ca7287bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27736, 662, 6026, 166, 250, "Input",ExpressionUUID->"608ea58a-f31b-495d-a6c4-ccf368f49dbd"],
Cell[33765, 830, 163201, 2879, 157, "Output",ExpressionUUID->"fd9005e3-b877-43b7-91d4-38dad44bf4c7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197015, 3715, 165, 3, 54, "Subsection",ExpressionUUID->"18fd16c5-5fcc-4bf6-955c-6e2af4e11bd8"],
Cell[197183, 3720, 1424, 33, 87, "Input",ExpressionUUID->"9df87b78-7e45-469a-ae97-922395564f17"],
Cell[198610, 3755, 6038, 172, 376, "Input",ExpressionUUID->"9188639a-c4b9-472f-9818-9b5b43b87bd3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[204697, 3933, 199, 3, 67, "Section",ExpressionUUID->"fa7f32b3-d967-467e-8c5a-c9cdcf7ddeb1"],
Cell[CellGroupData[{
Cell[204921, 3940, 146, 3, 44, "Subsubsection",ExpressionUUID->"1a5a1d2e-4700-4bad-965e-6f267cdeb8b0"],
Cell[205070, 3945, 128, 3, 28, "Input",ExpressionUUID->"773aea6b-ed3d-4160-b913-c5ae557244ac"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

